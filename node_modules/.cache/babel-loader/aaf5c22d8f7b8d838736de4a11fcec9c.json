{"ast":null,"code":"import _slicedToArray from\"H:/XETI/YETI-AMM-DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{JSBI,Token}from'@pancakeswap-libs/sdk';import React,{useCallback,useContext,useMemo,useState,useEffect}from'react';import{ThemeContext}from'styled-components';import{AutoColumn}from'../../components/Column';import{AutoRow}from'../../components/Row';import{SearchInput}from'../../components/SearchModal/styleds';import{useAllTokenV1Exchanges}from'../../data/V1';import{useActiveWeb3React}from'../../hooks';import{useAllTokens,useToken}from'../../hooks/Tokens';import{useSelectedTokenList}from'../../state/lists/hooks';import{useTokenBalancesWithLoadingIndicator}from'../../state/wallet/hooks';import{BackArrow,TYPE}from'../../components/Shared';import{LightCard}from'../../components/Card';import{BodyWrapper}from'../AppBody';import{EmptyState}from'./EmptyState';import V1PositionCard from'../../components/PositionCard/V1';import QuestionHelper from'../../components/QuestionHelper';import{Dots}from'../../components/swap/styleds';import{useAddUserToken}from'../../state/user/hooks';import{isTokenOnList}from'../../utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var MediumHeader=TYPE.mediumHeader,Body=TYPE.body;export default function MigrateV1(){var _Object$keys;var theme=useContext(ThemeContext);var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),tokenSearch=_useState2[0],setTokenSearch=_useState2[1];var handleTokenSearchChange=useCallback(function(e){return setTokenSearch(e.target.value);},[setTokenSearch]);// automatically add the search token\nvar token=useToken(tokenSearch);var selectedTokenListTokens=useSelectedTokenList();var isOnSelectedList=isTokenOnList(selectedTokenListTokens,token!==null&&token!==void 0?token:undefined);var allTokens=useAllTokens();var addToken=useAddUserToken();useEffect(function(){if(token&&!isOnSelectedList&&!allTokens[token.address]){addToken(token);}},[token,isOnSelectedList,addToken,allTokens]);// get V1 LP balances\nvar V1Exchanges=useAllTokenV1Exchanges();var V1LiquidityTokens=useMemo(function(){return chainId?Object.keys(V1Exchanges).map(function(exchangeAddress){return new Token(chainId,exchangeAddress,18,'UNI-V1','Uniswap V1');}):[];},[chainId,V1Exchanges]);var _useTokenBalancesWith=useTokenBalancesWithLoadingIndicator(account!==null&&account!==void 0?account:undefined,V1LiquidityTokens),_useTokenBalancesWith2=_slicedToArray(_useTokenBalancesWith,2),V1LiquidityBalances=_useTokenBalancesWith2[0],V1LiquidityBalancesLoading=_useTokenBalancesWith2[1];var allV1PairsWithLiquidity=V1LiquidityTokens.filter(function(V1LiquidityToken){var balance=V1LiquidityBalances===null||V1LiquidityBalances===void 0?void 0:V1LiquidityBalances[V1LiquidityToken.address];return balance&&JSBI.greaterThan(balance.raw,JSBI.BigInt(0));}).map(function(V1LiquidityToken){var balance=V1LiquidityBalances[V1LiquidityToken.address];return balance?/*#__PURE__*/_jsx(V1PositionCard,{token:V1Exchanges[V1LiquidityToken.address],V1LiquidityBalance:balance},V1LiquidityToken.address):null;});// should never always be false, because a V1 exhchange exists for WETH on all testnets\nvar isLoading=((_Object$keys=Object.keys(V1Exchanges))===null||_Object$keys===void 0?void 0:_Object$keys.length)===0||V1LiquidityBalancesLoading;return/*#__PURE__*/_jsx(BodyWrapper,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"16px\",children:[/*#__PURE__*/_jsxs(AutoRow,{style:{alignItems:'center',justifyContent:'space-between'},gap:\"8px\",children:[/*#__PURE__*/_jsx(BackArrow,{to:\"/pool\"}),/*#__PURE__*/_jsx(MediumHeader,{children:\"Migrate V1 Liquidity\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(QuestionHelper,{text:\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\"})})]}),/*#__PURE__*/_jsx(Body,{style:{marginBottom:8,fontWeight:400},children:\"For each pool shown below, click migrate to remove your liquidity from Uniswap V1 and deposit it into Uniswap V2.\"}),!account?/*#__PURE__*/_jsx(LightCard,{padding:\"40px\",children:/*#__PURE__*/_jsx(Body,{color:theme.colors.textDisabled,textAlign:\"center\",children:\"Connect to a wallet to view your V1 liquidity.\"})}):isLoading?/*#__PURE__*/_jsx(LightCard,{padding:\"40px\",children:/*#__PURE__*/_jsx(Body,{color:theme.colors.textDisabled,textAlign:\"center\",children:/*#__PURE__*/_jsx(Dots,{children:\"Loading\"})})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(AutoRow,{children:/*#__PURE__*/_jsx(SearchInput,{value:tokenSearch,onChange:handleTokenSearchChange,placeholder:\"Enter a token address to find liquidity\"})}),(allV1PairsWithLiquidity===null||allV1PairsWithLiquidity===void 0?void 0:allV1PairsWithLiquidity.length)>0?/*#__PURE__*/_jsx(_Fragment,{children:allV1PairsWithLiquidity}):/*#__PURE__*/_jsx(EmptyState,{message:\"No V1 Liquidity found.\"})]})]})});}","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/pages/MigrateV1/index.tsx"],"names":["JSBI","Token","React","useCallback","useContext","useMemo","useState","useEffect","ThemeContext","AutoColumn","AutoRow","SearchInput","useAllTokenV1Exchanges","useActiveWeb3React","useAllTokens","useToken","useSelectedTokenList","useTokenBalancesWithLoadingIndicator","BackArrow","TYPE","LightCard","BodyWrapper","EmptyState","V1PositionCard","QuestionHelper","Dots","useAddUserToken","isTokenOnList","MediumHeader","mediumHeader","Body","body","MigrateV1","theme","account","chainId","tokenSearch","setTokenSearch","handleTokenSearchChange","e","target","value","token","selectedTokenListTokens","isOnSelectedList","undefined","allTokens","addToken","address","V1Exchanges","V1LiquidityTokens","Object","keys","map","exchangeAddress","V1LiquidityBalances","V1LiquidityBalancesLoading","allV1PairsWithLiquidity","filter","V1LiquidityToken","balance","greaterThan","raw","BigInt","isLoading","length","alignItems","justifyContent","marginBottom","fontWeight","colors","textDisabled"],"mappings":"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","sourcesContent":["import { JSBI, Token } from '@pancakeswap-libs/sdk'\nimport React, { useCallback, useContext, useMemo, useState, useEffect } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { AutoColumn } from '../../components/Column'\nimport { AutoRow } from '../../components/Row'\nimport { SearchInput } from '../../components/SearchModal/styleds'\nimport { useAllTokenV1Exchanges } from '../../data/V1'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens, useToken } from '../../hooks/Tokens'\nimport { useSelectedTokenList } from '../../state/lists/hooks'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\nimport { BackArrow, TYPE } from '../../components/Shared'\nimport { LightCard } from '../../components/Card'\nimport { BodyWrapper } from '../AppBody'\nimport { EmptyState } from './EmptyState'\nimport V1PositionCard from '../../components/PositionCard/V1'\nimport QuestionHelper from '../../components/QuestionHelper'\nimport { Dots } from '../../components/swap/styleds'\nimport { useAddUserToken } from '../../state/user/hooks'\nimport { isTokenOnList } from '../../utils'\n\nconst { mediumHeader: MediumHeader, body: Body } = TYPE\n\nexport default function MigrateV1() {\n  const theme = useContext(ThemeContext)\n  const { account, chainId } = useActiveWeb3React()\n\n  const [tokenSearch, setTokenSearch] = useState<string>('')\n  const handleTokenSearchChange = useCallback((e) => setTokenSearch(e.target.value), [setTokenSearch])\n\n  // automatically add the search token\n  const token = useToken(tokenSearch)\n  const selectedTokenListTokens = useSelectedTokenList()\n  const isOnSelectedList = isTokenOnList(selectedTokenListTokens, token ?? undefined)\n  const allTokens = useAllTokens()\n  const addToken = useAddUserToken()\n  useEffect(() => {\n    if (token && !isOnSelectedList && !allTokens[token.address]) {\n      addToken(token)\n    }\n  }, [token, isOnSelectedList, addToken, allTokens])\n\n  // get V1 LP balances\n  const V1Exchanges = useAllTokenV1Exchanges()\n  const V1LiquidityTokens: Token[] = useMemo(() => {\n    return chainId\n      ? Object.keys(V1Exchanges).map(\n          (exchangeAddress) => new Token(chainId, exchangeAddress, 18, 'UNI-V1', 'Uniswap V1')\n        )\n      : []\n  }, [chainId, V1Exchanges])\n  const [V1LiquidityBalances, V1LiquidityBalancesLoading] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    V1LiquidityTokens\n  )\n  const allV1PairsWithLiquidity = V1LiquidityTokens.filter((V1LiquidityToken) => {\n    const balance = V1LiquidityBalances?.[V1LiquidityToken.address]\n    return balance && JSBI.greaterThan(balance.raw, JSBI.BigInt(0))\n  }).map((V1LiquidityToken) => {\n    const balance = V1LiquidityBalances[V1LiquidityToken.address]\n    return balance ? (\n      <V1PositionCard\n        key={V1LiquidityToken.address}\n        token={V1Exchanges[V1LiquidityToken.address]}\n        V1LiquidityBalance={balance}\n      />\n    ) : null\n  })\n\n  // should never always be false, because a V1 exhchange exists for WETH on all testnets\n  const isLoading = Object.keys(V1Exchanges)?.length === 0 || V1LiquidityBalancesLoading\n\n  return (\n    <BodyWrapper>\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrow to=\"/pool\" />\n          <MediumHeader>Migrate V1 Liquidity</MediumHeader>\n          <div>\n            <QuestionHelper text=\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\" />\n          </div>\n        </AutoRow>\n\n        <Body style={{ marginBottom: 8, fontWeight: 400 }}>\n          For each pool shown below, click migrate to remove your liquidity from Uniswap V1 and deposit it into Uniswap\n          V2.\n        </Body>\n\n        {!account ? (\n          <LightCard padding=\"40px\">\n            <Body color={theme.colors.textDisabled} textAlign=\"center\">\n              Connect to a wallet to view your V1 liquidity.\n            </Body>\n          </LightCard>\n        ) : isLoading ? (\n          <LightCard padding=\"40px\">\n            <Body color={theme.colors.textDisabled} textAlign=\"center\">\n              <Dots>Loading</Dots>\n            </Body>\n          </LightCard>\n        ) : (\n          <>\n            <AutoRow>\n              <SearchInput\n                value={tokenSearch}\n                onChange={handleTokenSearchChange}\n                placeholder=\"Enter a token address to find liquidity\"\n              />\n            </AutoRow>\n            {allV1PairsWithLiquidity?.length > 0 ? (\n              <>{allV1PairsWithLiquidity}</>\n            ) : (\n              <EmptyState message=\"No V1 Liquidity found.\" />\n            )}\n          </>\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}