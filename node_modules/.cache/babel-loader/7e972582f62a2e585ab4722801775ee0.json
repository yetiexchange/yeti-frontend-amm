{"ast":null,"code":"import _defineProperty from\"H:/XETI/YETI-AMM-DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _process$env$REACT_AP;import{Web3Provider}from'@ethersproject/providers';import{InjectedConnector}from'@web3-react/injected-connector';import{WalletConnectConnector}from'@web3-react/walletconnect-connector';import{WalletLinkConnector}from'@web3-react/walletlink-connector';import{PortisConnector}from'@web3-react/portis-connector';import{FortmaticConnector}from'./Fortmatic';import{NetworkConnector}from'./NetworkConnector';import{BscConnector}from'./bsc/bscConnector';var NETWORK_URL=process.env.REACT_APP_NETWORK_URL;var FORMATIC_KEY=process.env.REACT_APP_FORTMATIC_KEY;var PORTIS_ID=process.env.REACT_APP_PORTIS_ID;export var NETWORK_CHAIN_ID=parseInt((_process$env$REACT_AP=process.env.REACT_APP_CHAIN_ID)!==null&&_process$env$REACT_AP!==void 0?_process$env$REACT_AP:'1');if(typeof NETWORK_URL==='undefined'){throw new Error(\"REACT_APP_NETWORK_URL must be a defined environment variable\");}export var network=new NetworkConnector({urls:_defineProperty({},NETWORK_CHAIN_ID,NETWORK_URL)});var networkLibrary;export function getNetworkLibrary(){var _networkLibrary;// eslint-disable-next-line no-return-assign\nreturn networkLibrary=(_networkLibrary=networkLibrary)!==null&&_networkLibrary!==void 0?_networkLibrary:new Web3Provider(network.provider);}export var injected=new InjectedConnector({supportedChainIds:[56,97]});export var bsc=new BscConnector({supportedChainIds:[56]});// mainnet only\nexport var walletconnect=new WalletConnectConnector({rpc:{1:NETWORK_URL},bridge:'https://bridge.walletconnect.org',qrcode:true,pollingInterval:15000});// mainnet only\nexport var fortmatic=new FortmaticConnector({apiKey:FORMATIC_KEY!==null&&FORMATIC_KEY!==void 0?FORMATIC_KEY:'',chainId:1});// mainnet only\nexport var portis=new PortisConnector({dAppId:PORTIS_ID!==null&&PORTIS_ID!==void 0?PORTIS_ID:'',networks:[1]});// mainnet only\nexport var walletlink=new WalletLinkConnector({url:NETWORK_URL,appName:'Uniswap',appLogoUrl:'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg'});","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/connectors/index.ts"],"names":["Web3Provider","InjectedConnector","WalletConnectConnector","WalletLinkConnector","PortisConnector","FortmaticConnector","NetworkConnector","BscConnector","NETWORK_URL","process","env","REACT_APP_NETWORK_URL","FORMATIC_KEY","REACT_APP_FORTMATIC_KEY","PORTIS_ID","REACT_APP_PORTIS_ID","NETWORK_CHAIN_ID","parseInt","REACT_APP_CHAIN_ID","Error","network","urls","networkLibrary","getNetworkLibrary","provider","injected","supportedChainIds","bsc","walletconnect","rpc","bridge","qrcode","pollingInterval","fortmatic","apiKey","chainId","portis","dAppId","networks","walletlink","url","appName","appLogoUrl"],"mappings":"uKAAA,OAASA,YAAT,KAA6B,0BAA7B,CACA,OAASC,iBAAT,KAAkC,gCAAlC,CACA,OAASC,sBAAT,KAAuC,qCAAvC,CACA,OAASC,mBAAT,KAAoC,kCAApC,CACA,OAASC,eAAT,KAAgC,8BAAhC,CAEA,OAASC,kBAAT,KAAmC,aAAnC,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CACA,OAASC,YAAT,KAA6B,oBAA7B,CAEA,GAAMC,CAAAA,WAAW,CAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAhC,CACA,GAAMC,CAAAA,YAAY,CAAGH,OAAO,CAACC,GAAR,CAAYG,uBAAjC,CACA,GAAMC,CAAAA,SAAS,CAAGL,OAAO,CAACC,GAAR,CAAYK,mBAA9B,CAEA,MAAO,IAAMC,CAAAA,gBAAwB,CAAGC,QAAQ,wBAACR,OAAO,CAACC,GAAR,CAAYQ,kBAAb,+DAAmC,GAAnC,CAAzC,CAEP,GAAI,MAAOV,CAAAA,WAAP,GAAuB,WAA3B,CAAwC,CACtC,KAAM,IAAIW,CAAAA,KAAJ,gEAAN,CACD,CAED,MAAO,IAAMC,CAAAA,OAAO,CAAG,GAAId,CAAAA,gBAAJ,CAAqB,CAC1Ce,IAAI,oBAAKL,gBAAL,CAAwBR,WAAxB,CADsC,CAArB,CAAhB,CAIP,GAAIc,CAAAA,cAAJ,CACA,MAAO,SAASC,CAAAA,iBAAT,EAA2C,qBAChD;AACA,MAAQD,CAAAA,cAAc,kBAAGA,cAAH,mDAAqB,GAAItB,CAAAA,YAAJ,CAAiBoB,OAAO,CAACI,QAAzB,CAA3C,CACD,CAED,MAAO,IAAMC,CAAAA,QAAQ,CAAG,GAAIxB,CAAAA,iBAAJ,CAAsB,CAC5CyB,iBAAiB,CAAE,CAAC,EAAD,CAAK,EAAL,CADyB,CAAtB,CAAjB,CAIP,MAAO,IAAMC,CAAAA,GAAG,CAAG,GAAIpB,CAAAA,YAAJ,CAAiB,CAAEmB,iBAAiB,CAAE,CAAC,EAAD,CAArB,CAAjB,CAAZ,CAEP;AACA,MAAO,IAAME,CAAAA,aAAa,CAAG,GAAI1B,CAAAA,sBAAJ,CAA2B,CACtD2B,GAAG,CAAE,CAAE,EAAGrB,WAAL,CADiD,CAEtDsB,MAAM,CAAE,kCAF8C,CAGtDC,MAAM,CAAE,IAH8C,CAItDC,eAAe,CAAE,KAJqC,CAA3B,CAAtB,CAOP;AACA,MAAO,IAAMC,CAAAA,SAAS,CAAG,GAAI5B,CAAAA,kBAAJ,CAAuB,CAC9C6B,MAAM,CAAEtB,YAAF,SAAEA,YAAF,UAAEA,YAAF,CAAkB,EADsB,CAE9CuB,OAAO,CAAE,CAFqC,CAAvB,CAAlB,CAKP;AACA,MAAO,IAAMC,CAAAA,MAAM,CAAG,GAAIhC,CAAAA,eAAJ,CAAoB,CACxCiC,MAAM,CAAEvB,SAAF,SAAEA,SAAF,UAAEA,SAAF,CAAe,EADmB,CAExCwB,QAAQ,CAAE,CAAC,CAAD,CAF8B,CAApB,CAAf,CAKP;AACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,GAAIpC,CAAAA,mBAAJ,CAAwB,CAChDqC,GAAG,CAAEhC,WAD2C,CAEhDiC,OAAO,CAAE,SAFuC,CAGhDC,UAAU,CACR,yKAJ8C,CAAxB,CAAnB","sourcesContent":["import { Web3Provider } from '@ethersproject/providers'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\n\nimport { FortmaticConnector } from './Fortmatic'\nimport { NetworkConnector } from './NetworkConnector'\nimport { BscConnector } from './bsc/bscConnector'\n\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL\nconst FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY\nconst PORTIS_ID = process.env.REACT_APP_PORTIS_ID\n\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '1')\n\nif (typeof NETWORK_URL === 'undefined') {\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`)\n}\n\nexport const network = new NetworkConnector({\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n})\n\nlet networkLibrary: Web3Provider | undefined\nexport function getNetworkLibrary(): Web3Provider {\n  // eslint-disable-next-line no-return-assign\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\n}\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [56, 97],\n})\n\nexport const bsc = new BscConnector({ supportedChainIds: [56] })\n\n// mainnet only\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 1: NETWORK_URL },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 15000,\n})\n\n// mainnet only\nexport const fortmatic = new FortmaticConnector({\n  apiKey: FORMATIC_KEY ?? '',\n  chainId: 1,\n})\n\n// mainnet only\nexport const portis = new PortisConnector({\n  dAppId: PORTIS_ID ?? '',\n  networks: [1],\n})\n\n// mainnet only\nexport const walletlink = new WalletLinkConnector({\n  url: NETWORK_URL,\n  appName: 'Uniswap',\n  appLogoUrl:\n    'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg',\n})\n"]},"metadata":{},"sourceType":"module"}