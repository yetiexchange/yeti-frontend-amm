{"ast":null,"code":"import _slicedToArray from\"H:/XETI/YETI-AMM-DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useState}from'react';import{ThemeProvider as SCThemeProvider}from'styled-components';import{light,dark}from'@pancakeswap-libs/uikit';import{jsx as _jsx}from\"react/jsx-runtime\";var CACHE_KEY='IS_DARK';var ThemeContext=/*#__PURE__*/React.createContext({isDark:false,toggleTheme:function toggleTheme(){return null;}});var ThemeContextProvider=function ThemeContextProvider(_ref){var children=_ref.children;var _useState=useState(function(){var isDarkUserSetting=localStorage.getItem(CACHE_KEY);return isDarkUserSetting?JSON.parse(isDarkUserSetting):false;}),_useState2=_slicedToArray(_useState,2),isDark=_useState2[0],setIsDark=_useState2[1];var handleSetup=useCallback(function(event){if(event&&event.data&&typeof event.data===\"string\"&&event.data.startsWith(\"[iFrameSizer]message:\")){var dataStr=event.data.substring(\"[iFrameSizer]message:\".length);var data=JSON.parse(dataStr);console.log(\"data.isDark\",data.isDark);setIsDark(function(){return data.isDark;});}},[]);useEffect(function(){window.addEventListener(\"message\",handleSetup);return function(){window.removeEventListener('message',handleSetup);};},[handleSetup]);var toggleTheme=function toggleTheme(){setIsDark(function(prevState){localStorage.setItem(CACHE_KEY,JSON.stringify(!prevState));return!prevState;});};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{isDark:isDark,toggleTheme:toggleTheme},children:/*#__PURE__*/_jsx(SCThemeProvider,{theme:isDark?dark:light,children:children})});};export{ThemeContext,ThemeContextProvider};","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/ThemeContext.tsx"],"names":["React","useCallback","useEffect","useState","ThemeProvider","SCThemeProvider","light","dark","CACHE_KEY","ThemeContext","createContext","isDark","toggleTheme","ThemeContextProvider","children","isDarkUserSetting","localStorage","getItem","JSON","parse","setIsDark","handleSetup","event","data","startsWith","dataStr","substring","length","console","log","window","addEventListener","removeEventListener","prevState","setItem","stringify"],"mappings":"2IAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,SAA7B,CAAwCC,QAAxC,KAAwD,OAAxD,CACA,OAASC,aAAa,GAAIC,CAAAA,eAA1B,KAAiD,mBAAjD,CACA,OAASC,KAAT,CAAgBC,IAAhB,KAA4B,yBAA5B,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CAOA,GAAMC,CAAAA,YAAY,cAAGT,KAAK,CAACU,aAAN,CAAsC,CAAEC,MAAM,CAAE,KAAV,CAAiBC,WAAW,CAAE,6BAAM,KAAN,EAA9B,CAAtC,CAArB,CAEA,GAAMC,CAAAA,oBAA8B,CAAG,QAAjCA,CAAAA,oBAAiC,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eAC3BX,QAAQ,CAAC,UAAM,CACzC,GAAMY,CAAAA,iBAAiB,CAAGC,YAAY,CAACC,OAAb,CAAqBT,SAArB,CAA1B,CACA,MAAOO,CAAAA,iBAAiB,CAAGG,IAAI,CAACC,KAAL,CAAWJ,iBAAX,CAAH,CAAmC,KAA3D,CACD,CAHmC,CADmB,wCAChDJ,MADgD,eACxCS,SADwC,eAMvD,GAAMC,CAAAA,WAAW,CAAGpB,WAAW,CAAC,SAAAqB,KAAK,CAAE,CACrC,GAAGA,KAAK,EAAIA,KAAK,CAACC,IAAf,EAAuB,MAAOD,CAAAA,KAAK,CAACC,IAAb,GAAsB,QAA7C,EAAyDD,KAAK,CAACC,IAAN,CAAWC,UAAX,CAAsB,uBAAtB,CAA5D,CAA2G,CACzG,GAAMC,CAAAA,OAAO,CAAGH,KAAK,CAACC,IAAN,CAAWG,SAAX,CAAqB,wBAAwBC,MAA7C,CAAhB,CACA,GAAMJ,CAAAA,IAAI,CAAGL,IAAI,CAACC,KAAL,CAAWM,OAAX,CAAb,CACAG,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2BN,IAAI,CAACZ,MAAhC,EACAS,SAAS,CAAC,iBAAIG,CAAAA,IAAI,CAACZ,MAAT,EAAD,CAAT,CACD,CACF,CAP8B,CAO5B,EAP4B,CAA/B,CAQAT,SAAS,CAAC,UAAI,CACZ4B,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAAmCV,WAAnC,EACA,MAAO,WAAM,CACXS,MAAM,CAACE,mBAAP,CAA2B,SAA3B,CAAsCX,WAAtC,EACD,CAFD,CAGD,CALQ,CAKN,CAACA,WAAD,CALM,CAAT,CAOA,GAAMT,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBQ,SAAS,CAAC,SAACa,SAAD,CAAoB,CAC5BjB,YAAY,CAACkB,OAAb,CAAqB1B,SAArB,CAAgCU,IAAI,CAACiB,SAAL,CAAe,CAACF,SAAhB,CAAhC,EACA,MAAO,CAACA,SAAR,CACD,CAHQ,CAAT,CAID,CALD,CAOA,mBACE,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAEtB,MAAM,CAANA,MAAF,CAAUC,WAAW,CAAXA,WAAV,CAA9B,uBACE,KAAC,eAAD,EAAiB,KAAK,CAAED,MAAM,CAAGJ,IAAH,CAAUD,KAAxC,UAAgDQ,QAAhD,EADF,EADF,CAKD,CAjCD,CAmCA,OAASL,YAAT,CAAuBI,oBAAvB","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nexport interface ThemeContextType {\n  isDark: boolean;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = React.createContext<ThemeContextType>({ isDark: false, toggleTheme: () => null })\n\nconst ThemeContextProvider: React.FC = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const handleSetup = useCallback(event=>{\n    if(event && event.data && typeof event.data === \"string\" && event.data.startsWith(\"[iFrameSizer]message:\")){\n      const dataStr = event.data.substring(\"[iFrameSizer]message:\".length);\n      const data = JSON.parse(dataStr);\n      console.log(\"data.isDark\", data.isDark);\n      setIsDark(()=>data.isDark);\n    }\n  }, []);\n  useEffect(()=>{\n    window.addEventListener(\"message\", handleSetup);\n    return () => {\n      window.removeEventListener('message', handleSetup);\n    };\n  }, [handleSetup]);\n\n  const toggleTheme = () => {\n    setIsDark((prevState: any) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n"]},"metadata":{},"sourceType":"module"}