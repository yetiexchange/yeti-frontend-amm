{"ast":null,"code":"var _jsxFileName = \"H:\\\\XETI\\\\YETI-AMM-DEV\\\\src\\\\pages\\\\MigrateV1\\\\MigrateV1Exchange.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { AddressZero } from '@ethersproject/constants';\nimport { Currency, CurrencyAmount, Fraction, JSBI, Percent, Token, TokenAmount, WETH } from '@pancakeswap-libs/sdk';\nimport { Button, Text } from '@pancakeswap-libs/uikit';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Redirect } from 'react-router';\nimport { LightCard, PinkCard, YellowCard } from '../../components/Card';\nimport { AutoColumn } from '../../components/Column';\nimport CurrencyLogo from '../../components/CurrencyLogo';\nimport QuestionHelper from '../../components/QuestionHelper';\nimport { AutoRow, RowBetween, RowFixed } from '../../components/Row';\nimport { Dots } from '../../components/swap/styleds';\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../constants';\nimport { MIGRATOR_ADDRESS } from '../../constants/abis/migrator';\nimport { PairState, usePair } from '../../data/Reserves';\nimport { useTotalSupply } from '../../data/TotalSupply';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useToken } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport { useV1ExchangeContract, useV2MigratorContract } from '../../hooks/useContract';\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks';\nimport { useIsTransactionPending, useTransactionAdder } from '../../state/transactions/hooks';\nimport { useETHBalances, useTokenBalance } from '../../state/wallet/hooks';\nimport { BackArrow, ExternalLink, TYPE } from '../../components/Shared';\nimport { getEtherscanLink, isAddress } from '../../utils';\nimport { BodyWrapper } from '../AppBody';\nimport { EmptyState } from './EmptyState';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  mediumHeader: MediumHeader,\n  largeHeader: LargeHeader,\n  body: Body,\n  blue: Blue,\n  black: Black,\n  darkGray: DarkDray\n} = TYPE;\nconst POOL_CURRENCY_AMOUNT_MIN = new Fraction(JSBI.BigInt(1), JSBI.BigInt(1000000));\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18));\nconst ZERO = JSBI.BigInt(0);\nconst ONE = JSBI.BigInt(1);\nconst ZERO_FRACTION = new Fraction(ZERO, ONE);\nconst ALLOWED_OUTPUT_MIN_PERCENT = new Percent(JSBI.BigInt(10000 - INITIAL_ALLOWED_SLIPPAGE), JSBI.BigInt(10000));\n\nfunction FormattedPoolCurrencyAmount({\n  currencyAmount\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currencyAmount.equalTo(JSBI.BigInt(0)) ? '0' : currencyAmount.greaterThan(POOL_CURRENCY_AMOUNT_MIN) ? currencyAmount.toSignificant(4) : `<${POOL_CURRENCY_AMOUNT_MIN.toSignificant(1)}`\n  }, void 0, false);\n}\n\n_c = FormattedPoolCurrencyAmount;\nexport function V1LiquidityInfo({\n  token,\n  liquidityTokenAmount,\n  tokenWorth,\n  ethWorth\n}) {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n      style: {\n        justifyContent: 'flex-start',\n        width: 'fit-content'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n        size: \"24px\",\n        currency: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '.75rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(MediumHeader, {\n          children: [/*#__PURE__*/_jsxDEV(FormattedPoolCurrencyAmount, {\n            currencyAmount: liquidityTokenAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 14\n          }, this), ' ', chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol, \"/ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      my: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"16px\",\n        children: [\"Pooled \", chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"16px\",\n          ml: \"6px\",\n          children: tokenWorth.toSignificant(4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          size: \"20px\",\n          style: {\n            marginLeft: '8px'\n          },\n          currency: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      mb: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"16px\",\n        children: \"Pooled ETH:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"16px\",\n          ml: \"6px\",\n          children: /*#__PURE__*/_jsxDEV(FormattedPoolCurrencyAmount, {\n            currencyAmount: ethWorth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          size: \"20px\",\n          style: {\n            marginLeft: '8px'\n          },\n          currency: Currency.ETHER\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(V1LiquidityInfo, \"Srgj51dvRDiLRw5YTqb92Ixo5OU=\", false, function () {\n  return [useActiveWeb3React];\n});\n\n_c2 = V1LiquidityInfo;\n\nfunction V1PairMigration({\n  liquidityTokenAmount,\n  token\n}) {\n  _s2();\n\n  var _useETHBalances, _v1SpotPrice$invert, _v2SpotPrice$invert, _v1SpotPrice$invert2;\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token);\n  const exchangeETHBalance = (_useETHBalances = useETHBalances([liquidityTokenAmount.token.address])) === null || _useETHBalances === void 0 ? void 0 : _useETHBalances[liquidityTokenAmount.token.address];\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token);\n  const [v2PairState, v2Pair] = usePair(chainId ? WETH[chainId] : undefined, token);\n  const isFirstLiquidityProvider = v2PairState === PairState.NOT_EXISTS;\n  const v2SpotPrice = chainId && v2Pair ? v2Pair.reserveOf(token).divide(v2Pair.reserveOf(WETH[chainId])) : undefined;\n  const [confirmingMigration, setConfirmingMigration] = useState(false);\n  const [pendingMigrationHash, setPendingMigrationHash] = useState(null);\n  const shareFraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION;\n  const ethWorth = exchangeETHBalance ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient) : CurrencyAmount.ether(ZERO);\n  const tokenWorth = exchangeTokenBalance ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient) : new TokenAmount(token, ZERO);\n  const [approval, approve] = useApproveCallback(liquidityTokenAmount, MIGRATOR_ADDRESS);\n  const v1SpotPrice = exchangeTokenBalance && exchangeETHBalance ? exchangeTokenBalance.divide(new Fraction(exchangeETHBalance.raw, WEI_DENOM)) : null;\n  const priceDifferenceFraction = v1SpotPrice && v2SpotPrice ? v1SpotPrice.divide(v2SpotPrice).multiply('100').subtract('100') : undefined;\n  const priceDifferenceAbs = (priceDifferenceFraction === null || priceDifferenceFraction === void 0 ? void 0 : priceDifferenceFraction.lessThan(ZERO)) ? priceDifferenceFraction === null || priceDifferenceFraction === void 0 ? void 0 : priceDifferenceFraction.multiply('-1') : priceDifferenceFraction;\n  const minAmountETH = v2SpotPrice && tokenWorth ? tokenWorth.divide(v2SpotPrice).multiply(WEI_DENOM).multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient : ethWorth === null || ethWorth === void 0 ? void 0 : ethWorth.numerator;\n  const minAmountToken = v2SpotPrice && ethWorth ? ethWorth.multiply(v2SpotPrice).multiply(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(token.decimals))).multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient : tokenWorth === null || tokenWorth === void 0 ? void 0 : tokenWorth.numerator;\n  const addTransaction = useTransactionAdder();\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash !== null && pendingMigrationHash !== void 0 ? pendingMigrationHash : undefined);\n  const migrator = useV2MigratorContract();\n  const migrate = useCallback(() => {\n    if (!minAmountToken || !minAmountETH || !migrator) return;\n    setConfirmingMigration(true);\n    migrator.migrate(token.address, minAmountToken.toString(), minAmountETH.toString(), account, Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW).then(response => {\n      addTransaction(response, {\n        summary: `Migrate ${token.symbol} liquidity to V2`\n      });\n      setPendingMigrationHash(response.hash);\n    }).catch(() => {\n      setConfirmingMigration(false);\n    });\n  }, [minAmountToken, minAmountETH, migrator, token, account, addTransaction]);\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO);\n  const largePriceDifference = !!priceDifferenceAbs && !priceDifferenceAbs.lessThan(JSBI.BigInt(5));\n  const isSuccessfullyMigrated = !!pendingMigrationHash && noLiquidityTokens;\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Body, {\n      my: 9,\n      style: {\n        fontWeight: 400\n      },\n      children: [\"This tool will safely migrate your V1 liquidity to V2 with minimal price risk. The process is completely trustless thanks to the\", ' ', chainId && /*#__PURE__*/_jsxDEV(ExternalLink, {\n        href: getEtherscanLink(chainId, MIGRATOR_ADDRESS, 'address'),\n        children: /*#__PURE__*/_jsxDEV(Blue, {\n          display: \"inline\",\n          children: \"Uniswap migration contract\\u2197\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), !isFirstLiquidityProvider && largePriceDifference ? /*#__PURE__*/_jsxDEV(YellowCard, {\n      children: [/*#__PURE__*/_jsxDEV(Body, {\n        style: {\n          marginBottom: 8,\n          fontWeight: 400\n        },\n        children: \"It's best to deposit liquidity into Uniswap V2 at a price you believe is correct. If the V2 price seems incorrect, you can either make a swap to move the price or wait for someone else to do so.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(Body, {\n            children: \"V1 Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Black, {\n            children: [v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : v1SpotPrice.toSignificant(6), \" \", token.symbol, \"/ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Black, {\n            children: [v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : (_v1SpotPrice$invert = v1SpotPrice.invert()) === null || _v1SpotPrice$invert === void 0 ? void 0 : _v1SpotPrice$invert.toSignificant(6), \" ETH/\", token.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(Body, {\n            children: \"V2 Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Black, {\n            children: [v2SpotPrice === null || v2SpotPrice === void 0 ? void 0 : v2SpotPrice.toSignificant(6), \" \", token.symbol, \"/ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Black, {\n            children: [v2SpotPrice === null || v2SpotPrice === void 0 ? void 0 : (_v2SpotPrice$invert = v2SpotPrice.invert()) === null || _v2SpotPrice$invert === void 0 ? void 0 : _v2SpotPrice$invert.toSignificant(6), \" ETH/\", token.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(Body, {\n            color: \"inherit\",\n            children: \"Price Difference:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Black, {\n            color: \"inherit\",\n            children: [priceDifferenceAbs === null || priceDifferenceAbs === void 0 ? void 0 : priceDifferenceAbs.toSignificant(4), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this) : null, isFirstLiquidityProvider && /*#__PURE__*/_jsxDEV(PinkCard, {\n      children: [/*#__PURE__*/_jsxDEV(Body, {\n        style: {\n          marginBottom: 8,\n          fontWeight: 400\n        },\n        children: \"You are the first liquidity provider for this pair on Uniswap V2. Your liquidity will be migrated at the current V1 price. Your transaction cost also includes the gas to create the pool.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(Body, {\n            children: \"V1 Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Black, {\n            children: [v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : v1SpotPrice.toSignificant(6), \" \", token.symbol, \"/ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Black, {\n            children: [v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : (_v1SpotPrice$invert2 = v1SpotPrice.invert()) === null || _v1SpotPrice$invert2 === void 0 ? void 0 : _v1SpotPrice$invert2.toSignificant(6), \" ETH/\", token.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LightCard, {\n      children: [/*#__PURE__*/_jsxDEV(V1LiquidityInfo, {\n        token: token,\n        liquidityTokenAmount: liquidityTokenAmount,\n        tokenWorth: tokenWorth,\n        ethWorth: ethWorth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"12px\",\n          style: {\n            flex: '1',\n            marginRight: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: approval === ApprovalState.APPROVED ? 'success' : 'primary',\n            disabled: approval !== ApprovalState.NOT_APPROVED,\n            onClick: approve,\n            children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n              children: \"Approving\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this) : approval === ApprovalState.APPROVED ? 'Approved' : 'Approve'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"12px\",\n          style: {\n            flex: '1'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: isSuccessfullyMigrated ? 'success' : 'primary',\n            disabled: isSuccessfullyMigrated || noLiquidityTokens || isMigrationPending || approval !== ApprovalState.APPROVED || confirmingMigration,\n            onClick: migrate,\n            children: isSuccessfullyMigrated ? 'Success' : isMigrationPending ? /*#__PURE__*/_jsxDEV(Dots, {\n              children: \"Migrating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 74\n            }, this) : 'Migrate'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DarkDray, {\n      style: {\n        textAlign: 'center'\n      },\n      children: `Your Uniswap V1 ${token.symbol}/ETH liquidity will become Uniswap V2 ${token.symbol}/ETH liquidity.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(V1PairMigration, \"8zYtsXu1la9O7nr5lvYN0jDMyk0=\", false, function () {\n  return [useActiveWeb3React, useTotalSupply, useETHBalances, useTokenBalance, usePair, useApproveCallback, useTransactionAdder, useIsTransactionPending, useV2MigratorContract];\n});\n\n_c3 = V1PairMigration;\nexport default function MigrateV1Exchange({\n  history,\n  match: {\n    params: {\n      address\n    }\n  }\n}) {\n  _s3();\n\n  var _useSingleCallResult, _useSingleCallResult$;\n\n  const validatedAddress = isAddress(address);\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const exchangeContract = useV1ExchangeContract(validatedAddress || undefined);\n  const tokenAddress = (_useSingleCallResult = useSingleCallResult(exchangeContract, 'tokenAddress', undefined, NEVER_RELOAD)) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  const token = useToken(tokenAddress);\n  const liquidityToken = useMemo(() => validatedAddress && chainId && token ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, 'Uniswap V1') : undefined, [chainId, validatedAddress, token]);\n  const userLiquidityBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, liquidityToken); // redirect for invalid url params\n\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error('Invalid address in path', address);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/migrate/v1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BodyWrapper, {\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        gap: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(BackArrow, {\n          to: \"/migrate/v1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MediumHeader, {\n          children: \"Migrate V1 Liquidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), !account ? /*#__PURE__*/_jsxDEV(LargeHeader, {\n        children: \"You must connect an account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this) : validatedAddress && chainId && (token === null || token === void 0 ? void 0 : token.equals(WETH[chainId])) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Body, {\n          my: 9,\n          style: {\n            fontWeight: 400\n          },\n          children: \"Because Uniswap V2 uses WETH under the hood, your Uniswap V1 WETH/ETH liquidity cannot be migrated. You may want to remove your liquidity instead.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            history.push(`/remove/v1/${validatedAddress}`);\n          },\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : userLiquidityBalance && token ? /*#__PURE__*/_jsxDEV(V1PairMigration, {\n        liquidityTokenAmount: userLiquidityBalance,\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyState, {\n        message: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(MigrateV1Exchange, \"z1J1fbUzEnt2GJn4Tr7V1Id5IB8=\", false, function () {\n  return [useActiveWeb3React, useV1ExchangeContract, useSingleCallResult, useToken, useTokenBalance];\n});\n\n_c4 = MigrateV1Exchange;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"FormattedPoolCurrencyAmount\");\n$RefreshReg$(_c2, \"V1LiquidityInfo\");\n$RefreshReg$(_c3, \"V1PairMigration\");\n$RefreshReg$(_c4, \"MigrateV1Exchange\");","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/pages/MigrateV1/MigrateV1Exchange.tsx"],"names":["AddressZero","Currency","CurrencyAmount","Fraction","JSBI","Percent","Token","TokenAmount","WETH","Button","Text","React","useCallback","useMemo","useState","Redirect","LightCard","PinkCard","YellowCard","AutoColumn","CurrencyLogo","QuestionHelper","AutoRow","RowBetween","RowFixed","Dots","DEFAULT_DEADLINE_FROM_NOW","INITIAL_ALLOWED_SLIPPAGE","MIGRATOR_ADDRESS","PairState","usePair","useTotalSupply","useActiveWeb3React","useToken","ApprovalState","useApproveCallback","useV1ExchangeContract","useV2MigratorContract","NEVER_RELOAD","useSingleCallResult","useIsTransactionPending","useTransactionAdder","useETHBalances","useTokenBalance","BackArrow","ExternalLink","TYPE","getEtherscanLink","isAddress","BodyWrapper","EmptyState","mediumHeader","MediumHeader","largeHeader","LargeHeader","body","Body","blue","Blue","black","Black","darkGray","DarkDray","POOL_CURRENCY_AMOUNT_MIN","BigInt","WEI_DENOM","exponentiate","ZERO","ONE","ZERO_FRACTION","ALLOWED_OUTPUT_MIN_PERCENT","FormattedPoolCurrencyAmount","currencyAmount","equalTo","greaterThan","toSignificant","V1LiquidityInfo","token","liquidityTokenAmount","tokenWorth","ethWorth","chainId","justifyContent","width","marginLeft","equals","symbol","ETHER","V1PairMigration","account","totalSupply","exchangeETHBalance","address","exchangeTokenBalance","v2PairState","v2Pair","undefined","isFirstLiquidityProvider","NOT_EXISTS","v2SpotPrice","reserveOf","divide","confirmingMigration","setConfirmingMigration","pendingMigrationHash","setPendingMigrationHash","shareFraction","raw","ether","multiply","quotient","approval","approve","v1SpotPrice","priceDifferenceFraction","subtract","priceDifferenceAbs","lessThan","minAmountETH","numerator","minAmountToken","decimals","addTransaction","isMigrationPending","migrator","migrate","toString","Math","floor","Date","getTime","then","response","summary","hash","catch","noLiquidityTokens","largePriceDifference","isSuccessfullyMigrated","fontWeight","marginBottom","invert","display","marginTop","flex","marginRight","APPROVED","NOT_APPROVED","PENDING","textAlign","MigrateV1Exchange","history","match","params","validatedAddress","exchangeContract","tokenAddress","result","liquidityToken","userLiquidityBalance","console","error","alignItems","push"],"mappings":"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","sourcesContent":["import { TransactionResponse } from '@ethersproject/abstract-provider'\nimport { AddressZero } from '@ethersproject/constants'\nimport { Currency, CurrencyAmount, Fraction, JSBI, Percent, Token, TokenAmount, WETH } from '@pancakeswap-libs/sdk'\nimport { Button, Text } from '@pancakeswap-libs/uikit'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router'\nimport { LightCard, PinkCard, YellowCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport QuestionHelper from '../../components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from '../../components/Row'\nimport { Dots } from '../../components/swap/styleds'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\nimport { MIGRATOR_ADDRESS } from '../../constants/abis/migrator'\nimport { PairState, usePair } from '../../data/Reserves'\nimport { useTotalSupply } from '../../data/TotalSupply'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useToken } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useV1ExchangeContract, useV2MigratorContract } from '../../hooks/useContract'\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks'\nimport { useIsTransactionPending, useTransactionAdder } from '../../state/transactions/hooks'\nimport { useETHBalances, useTokenBalance } from '../../state/wallet/hooks'\nimport { BackArrow, ExternalLink, TYPE } from '../../components/Shared'\nimport { getEtherscanLink, isAddress } from '../../utils'\nimport { BodyWrapper } from '../AppBody'\nimport { EmptyState } from './EmptyState'\n\nconst {\n  mediumHeader: MediumHeader,\n  largeHeader: LargeHeader,\n  body: Body,\n  blue: Blue,\n  black: Black,\n  darkGray: DarkDray,\n} = TYPE\n\nconst POOL_CURRENCY_AMOUNT_MIN = new Fraction(JSBI.BigInt(1), JSBI.BigInt(1000000))\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18))\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst ZERO_FRACTION = new Fraction(ZERO, ONE)\nconst ALLOWED_OUTPUT_MIN_PERCENT = new Percent(JSBI.BigInt(10000 - INITIAL_ALLOWED_SLIPPAGE), JSBI.BigInt(10000))\n\nfunction FormattedPoolCurrencyAmount({ currencyAmount }: { currencyAmount: CurrencyAmount }) {\n  return (\n    <>\n      {currencyAmount.equalTo(JSBI.BigInt(0))\n        ? '0'\n        : currencyAmount.greaterThan(POOL_CURRENCY_AMOUNT_MIN)\n        ? currencyAmount.toSignificant(4)\n        : `<${POOL_CURRENCY_AMOUNT_MIN.toSignificant(1)}`}\n    </>\n  )\n}\n\nexport function V1LiquidityInfo({\n  token,\n  liquidityTokenAmount,\n  tokenWorth,\n  ethWorth,\n}: {\n  token: Token\n  liquidityTokenAmount: TokenAmount\n  tokenWorth: TokenAmount\n  ethWorth: CurrencyAmount\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  return (\n    <>\n      <AutoRow style={{ justifyContent: 'flex-start', width: 'fit-content' }}>\n        <CurrencyLogo size=\"24px\" currency={token} />\n        <div style={{ marginLeft: '.75rem' }}>\n          <MediumHeader>\n            {<FormattedPoolCurrencyAmount currencyAmount={liquidityTokenAmount} />}{' '}\n            {chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH\n          </MediumHeader>\n        </div>\n      </AutoRow>\n\n      <RowBetween my=\"1rem\">\n        <Text fontSize=\"16px\">Pooled {chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}:</Text>\n        <RowFixed>\n          <Text fontSize=\"16px\" ml=\"6px\">\n            {tokenWorth.toSignificant(4)}\n          </Text>\n          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={token} />\n        </RowFixed>\n      </RowBetween>\n      <RowBetween mb=\"1rem\">\n        <Text fontSize=\"16px\">Pooled ETH:</Text>\n        <RowFixed>\n          <Text fontSize=\"16px\" ml=\"6px\">\n            <FormattedPoolCurrencyAmount currencyAmount={ethWorth} />\n          </Text>\n          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={Currency.ETHER} />\n        </RowFixed>\n      </RowBetween>\n    </>\n  )\n}\n\nfunction V1PairMigration({ liquidityTokenAmount, token }: { liquidityTokenAmount: TokenAmount; token: Token }) {\n  const { account, chainId } = useActiveWeb3React()\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token)\n  const exchangeETHBalance = useETHBalances([liquidityTokenAmount.token.address])?.[liquidityTokenAmount.token.address]\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token)\n\n  const [v2PairState, v2Pair] = usePair(chainId ? WETH[chainId] : undefined, token)\n  const isFirstLiquidityProvider: boolean = v2PairState === PairState.NOT_EXISTS\n\n  const v2SpotPrice = chainId && v2Pair ? v2Pair.reserveOf(token).divide(v2Pair.reserveOf(WETH[chainId])) : undefined\n\n  const [confirmingMigration, setConfirmingMigration] = useState<boolean>(false)\n  const [pendingMigrationHash, setPendingMigrationHash] = useState<string | null>(null)\n\n  const shareFraction: Fraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION\n\n  const ethWorth: CurrencyAmount = exchangeETHBalance\n    ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient)\n    : CurrencyAmount.ether(ZERO)\n\n  const tokenWorth: TokenAmount = exchangeTokenBalance\n    ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient)\n    : new TokenAmount(token, ZERO)\n\n  const [approval, approve] = useApproveCallback(liquidityTokenAmount, MIGRATOR_ADDRESS)\n\n  const v1SpotPrice =\n    exchangeTokenBalance && exchangeETHBalance\n      ? exchangeTokenBalance.divide(new Fraction(exchangeETHBalance.raw, WEI_DENOM))\n      : null\n\n  const priceDifferenceFraction: Fraction | undefined =\n    v1SpotPrice && v2SpotPrice ? v1SpotPrice.divide(v2SpotPrice).multiply('100').subtract('100') : undefined\n\n  const priceDifferenceAbs: Fraction | undefined = priceDifferenceFraction?.lessThan(ZERO)\n    ? priceDifferenceFraction?.multiply('-1')\n    : priceDifferenceFraction\n\n  const minAmountETH: JSBI | undefined =\n    v2SpotPrice && tokenWorth\n      ? tokenWorth.divide(v2SpotPrice).multiply(WEI_DENOM).multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\n      : ethWorth?.numerator\n\n  const minAmountToken: JSBI | undefined =\n    v2SpotPrice && ethWorth\n      ? ethWorth\n          .multiply(v2SpotPrice)\n          .multiply(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(token.decimals)))\n          .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\n      : tokenWorth?.numerator\n\n  const addTransaction = useTransactionAdder()\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash ?? undefined)\n\n  const migrator = useV2MigratorContract()\n  const migrate = useCallback(() => {\n    if (!minAmountToken || !minAmountETH || !migrator) return\n\n    setConfirmingMigration(true)\n    migrator\n      .migrate(\n        token.address,\n        minAmountToken.toString(),\n        minAmountETH.toString(),\n        account,\n        Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW\n      )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Migrate ${token.symbol} liquidity to V2`,\n        })\n        setPendingMigrationHash(response.hash)\n      })\n      .catch(() => {\n        setConfirmingMigration(false)\n      })\n  }, [minAmountToken, minAmountETH, migrator, token, account, addTransaction])\n\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO)\n\n  const largePriceDifference = !!priceDifferenceAbs && !priceDifferenceAbs.lessThan(JSBI.BigInt(5))\n\n  const isSuccessfullyMigrated = !!pendingMigrationHash && noLiquidityTokens\n\n  return (\n    <AutoColumn gap=\"20px\">\n      <Body my={9} style={{ fontWeight: 400 }}>\n        This tool will safely migrate your V1 liquidity to V2 with minimal price risk. The process is completely\n        trustless thanks to the{' '}\n        {chainId && (\n          <ExternalLink href={getEtherscanLink(chainId, MIGRATOR_ADDRESS, 'address')}>\n            <Blue display=\"inline\">Uniswap migration contract↗</Blue>\n          </ExternalLink>\n        )}\n        .\n      </Body>\n\n      {!isFirstLiquidityProvider && largePriceDifference ? (\n        <YellowCard>\n          <Body style={{ marginBottom: 8, fontWeight: 400 }}>\n            It&apos;s best to deposit liquidity into Uniswap V2 at a price you believe is correct. If the V2 price seems\n            incorrect, you can either make a swap to move the price or wait for someone else to do so.\n          </Body>\n          <AutoColumn gap=\"8px\">\n            <RowBetween>\n              <Body>V1 Price:</Body>\n              <Black>\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </Black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <Black>\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </Black>\n            </RowBetween>\n\n            <RowBetween>\n              <Body>V2 Price:</Body>\n              <Black>\n                {v2SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </Black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <Black>\n                {v2SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </Black>\n            </RowBetween>\n\n            <RowBetween>\n              <Body color=\"inherit\">Price Difference:</Body>\n              <Black color=\"inherit\">{priceDifferenceAbs?.toSignificant(4)}%</Black>\n            </RowBetween>\n          </AutoColumn>\n        </YellowCard>\n      ) : null}\n\n      {isFirstLiquidityProvider && (\n        <PinkCard>\n          <Body style={{ marginBottom: 8, fontWeight: 400 }}>\n            You are the first liquidity provider for this pair on Uniswap V2. Your liquidity will be migrated at the\n            current V1 price. Your transaction cost also includes the gas to create the pool.\n          </Body>\n\n          <AutoColumn gap=\"8px\">\n            <RowBetween>\n              <Body>V1 Price:</Body>\n              <Black>\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </Black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <Black>\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </Black>\n            </RowBetween>\n          </AutoColumn>\n        </PinkCard>\n      )}\n\n      <LightCard>\n        <V1LiquidityInfo\n          token={token}\n          liquidityTokenAmount={liquidityTokenAmount}\n          tokenWorth={tokenWorth}\n          ethWorth={ethWorth}\n        />\n\n        <div style={{ display: 'flex', marginTop: '1rem' }}>\n          <AutoColumn gap=\"12px\" style={{ flex: '1', marginRight: 12 }}>\n            <Button\n              variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n              disabled={approval !== ApprovalState.NOT_APPROVED}\n              onClick={approve}\n            >\n              {approval === ApprovalState.PENDING ? (\n                <Dots>Approving</Dots>\n              ) : approval === ApprovalState.APPROVED ? (\n                'Approved'\n              ) : (\n                'Approve'\n              )}\n            </Button>\n          </AutoColumn>\n          <AutoColumn gap=\"12px\" style={{ flex: '1' }}>\n            <Button\n              variant={isSuccessfullyMigrated ? 'success' : 'primary'}\n              disabled={\n                isSuccessfullyMigrated ||\n                noLiquidityTokens ||\n                isMigrationPending ||\n                approval !== ApprovalState.APPROVED ||\n                confirmingMigration\n              }\n              onClick={migrate}\n            >\n              {isSuccessfullyMigrated ? 'Success' : isMigrationPending ? <Dots>Migrating</Dots> : 'Migrate'}\n            </Button>\n          </AutoColumn>\n        </div>\n      </LightCard>\n      <DarkDray style={{ textAlign: 'center' }}>\n        {`Your Uniswap V1 ${token.symbol}/ETH liquidity will become Uniswap V2 ${token.symbol}/ETH liquidity.`}\n      </DarkDray>\n    </AutoColumn>\n  )\n}\n\nexport default function MigrateV1Exchange({\n  history,\n  match: {\n    params: { address },\n  },\n}: RouteComponentProps<{ address: string }>) {\n  const validatedAddress = isAddress(address)\n  const { chainId, account } = useActiveWeb3React()\n\n  const exchangeContract = useV1ExchangeContract(validatedAddress || undefined)\n  const tokenAddress = useSingleCallResult(exchangeContract, 'tokenAddress', undefined, NEVER_RELOAD)?.result?.[0]\n\n  const token = useToken(tokenAddress)\n\n  const liquidityToken: Token | undefined = useMemo(\n    () =>\n      validatedAddress && chainId && token\n        ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, 'Uniswap V1')\n        : undefined,\n    [chainId, validatedAddress, token]\n  )\n  const userLiquidityBalance = useTokenBalance(account ?? undefined, liquidityToken)\n\n  // redirect for invalid url params\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error('Invalid address in path', address)\n    return <Redirect to=\"/migrate/v1\" />\n  }\n\n  return (\n    <BodyWrapper>\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrow to=\"/migrate/v1\" />\n          <MediumHeader>Migrate V1 Liquidity</MediumHeader>\n          <div>\n            <QuestionHelper text=\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\" />\n          </div>\n        </AutoRow>\n\n        {!account ? (\n          <LargeHeader>You must connect an account.</LargeHeader>\n        ) : validatedAddress && chainId && token?.equals(WETH[chainId]) ? (\n          <>\n            <Body my={9} style={{ fontWeight: 400 }}>\n              Because Uniswap V2 uses WETH under the hood, your Uniswap V1 WETH/ETH liquidity cannot be migrated. You\n              may want to remove your liquidity instead.\n            </Body>\n\n            <Button\n              onClick={() => {\n                history.push(`/remove/v1/${validatedAddress}`)\n              }}\n            >\n              Remove\n            </Button>\n          </>\n        ) : userLiquidityBalance && token ? (\n          <V1PairMigration liquidityTokenAmount={userLiquidityBalance} token={token} />\n        ) : (\n          <EmptyState message=\"Loading...\" />\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}