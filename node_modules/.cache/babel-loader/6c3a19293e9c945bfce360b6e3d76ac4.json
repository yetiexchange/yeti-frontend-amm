{"ast":null,"code":"var _jsxFileName = \"H:\\\\XETI\\\\YETI-AMM-DEV\\\\src\\\\components\\\\Popups\\\\TransactionPopup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { AlertCircle, CheckCircle } from 'react-feather';\nimport styled, { ThemeContext } from 'styled-components';\nimport { useActiveWeb3React } from '../../hooks';\nimport { TYPE, ExternalLink } from '../Shared';\nimport { getEtherscanLink } from '../../utils';\nimport { AutoColumn } from '../Column';\nimport { AutoRow } from '../Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  body: Body\n} = TYPE;\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`;\n_c = RowNoFlex;\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary\n}) {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(RowNoFlex, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingRight: 16\n      },\n      children: success ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n        color: theme.colors.success,\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AlertCircle, {\n        color: theme.colors.failure,\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"8px\",\n      children: [/*#__PURE__*/_jsxDEV(Body, {\n        fontWeight: 500,\n        children: summary !== null && summary !== void 0 ? summary : `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), chainId && /*#__PURE__*/_jsxDEV(ExternalLink, {\n        href: getEtherscanLink(chainId, hash, 'transaction'),\n        children: \"View on bscscan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionPopup, \"T6R0rNoeDAN08I5LHnTv9bpZZiA=\", false, function () {\n  return [useActiveWeb3React];\n});\n\n_c2 = TransactionPopup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RowNoFlex\");\n$RefreshReg$(_c2, \"TransactionPopup\");","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/components/Popups/TransactionPopup.tsx"],"names":["React","useContext","AlertCircle","CheckCircle","styled","ThemeContext","useActiveWeb3React","TYPE","ExternalLink","getEtherscanLink","AutoColumn","AutoRow","body","Body","RowNoFlex","TransactionPopup","hash","success","summary","chainId","theme","paddingRight","colors","failure","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,eAAzC;AACA,OAAOC,MAAP,IAAiBC,YAAjB,QAAqC,mBAArC;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,IAAT,EAAeC,YAAf,QAAmC,WAAnC;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,OAAT,QAAwB,QAAxB;;AAEA,MAAM;AAAEC,EAAAA,IAAI,EAAEC;AAAR,IAAiBN,IAAvB;AAEA,MAAMO,SAAS,GAAGV,MAAM,CAACO,OAAD,CAAU;AAClC;AACA,CAFA;KAAMG,S;AAIN,eAAe,SAASC,gBAAT,CAA0B;AACvCC,EAAAA,IADuC;AAEvCC,EAAAA,OAFuC;AAGvCC,EAAAA;AAHuC,CAA1B,EAQZ;AAAA;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAcb,kBAAkB,EAAtC;AAEA,QAAMc,KAAK,GAAGnB,UAAU,CAACI,YAAD,CAAxB;AAEA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEgB,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAA,gBACGJ,OAAO,gBACN,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEG,KAAK,CAACE,MAAN,CAAaL,OAAjC;AAA0C,QAAA,IAAI,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA,cADM,gBAGN,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEG,KAAK,CAACE,MAAN,CAAaC,OAAjC;AAA0C,QAAA,IAAI,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,UAAD;AAAY,MAAA,GAAG,EAAC,KAAhB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAE,GAAlB;AAAA,kBAAwBL,OAAxB,aAAwBA,OAAxB,cAAwBA,OAAxB,GAAoC,SAAQF,IAAI,CAACQ,KAAL,CAAW,CAAX,EAAc,CAAd,CAAiB,MAAKR,IAAI,CAACQ,KAAL,CAAW,EAAX,EAAe,EAAf,CAAmB;AAArF;AAAA;AAAA;AAAA;AAAA,cADF,EAEGL,OAAO,iBAAI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEV,gBAAgB,CAACU,OAAD,EAAUH,IAAV,EAAgB,aAAhB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA5BuBD,gB;UASFT,kB;;;MATES,gB","sourcesContent":["import React, { useContext } from 'react'\nimport { AlertCircle, CheckCircle } from 'react-feather'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useActiveWeb3React } from '../../hooks'\nimport { TYPE, ExternalLink } from '../Shared'\nimport { getEtherscanLink } from '../../utils'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nconst { body: Body } = TYPE\n\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`\n\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary,\n}: {\n  hash: string\n  success?: boolean\n  summary?: string\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const theme = useContext(ThemeContext)\n\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16 }}>\n        {success ? (\n          <CheckCircle color={theme.colors.success} size={24} />\n        ) : (\n          <AlertCircle color={theme.colors.failure} size={24} />\n        )}\n      </div>\n      <AutoColumn gap=\"8px\">\n        <Body fontWeight={500}>{summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Body>\n        {chainId && <ExternalLink href={getEtherscanLink(chainId, hash, 'transaction')}>View on bscscan</ExternalLink>}\n      </AutoColumn>\n    </RowNoFlex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}