{"ast":null,"code":"import _taggedTemplateLiteral from\"H:/XETI/YETI-AMM-DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React from'react';import styled from'styled-components';import{transparentize}from'polished';import{RowBetween}from'../Row';import{AutoColumn}from'../Column';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=styled(AutoColumn)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-top: 1.25rem;\\n\"])));var Grouping=styled(RowBetween)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 50%;\\n\"])));var Circle=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  min-width: 20px;\\n  min-height: 20px;\\n  background-color: \",\";\\n  border-radius: 50%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  line-height: 8px;\\n  font-size: 12px;\\n  color: \",\";\\n\"])),function(_ref){var theme=_ref.theme,confirmed=_ref.confirmed,disabled=_ref.disabled;return disabled?theme.colors.backgroundDisabled:confirmed?theme.colors.success:theme.colors.primary;},function(_ref2){var theme=_ref2.theme,confirmed=_ref2.confirmed,disabled=_ref2.disabled;return disabled?theme.colors.text:confirmed?theme.colors.success:'#FFFFFF';});var CircleRow=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: calc(100% - 20px);\\n  display: flex;\\n  align-items: center;\\n\"])));var Connector=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 2px;\\n  background-color: ;\\n  background: linear-gradient(\\n    90deg,\\n    \",\" 0%,\\n    \",\" 80%\\n  );\\n  opacity: 0.6;\\n\"])),function(_ref3){var theme=_ref3.theme,prevConfirmed=_ref3.prevConfirmed;return transparentize(0.5,prevConfirmed?theme.colors.success:theme.colors.primary);},function(_ref4){var theme=_ref4.theme,prevConfirmed=_ref4.prevConfirmed;return prevConfirmed?theme.colors.primary:theme.colors.backgroundDisabled;});/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */export default function ProgressCircles(_ref5){var steps=_ref5.steps;return/*#__PURE__*/_jsx(Wrapper,{justify:\"center\",children:/*#__PURE__*/_jsxs(Grouping,{children:[steps.map(function(step,i){return/*#__PURE__*/ (// eslint-disable-next-line react/no-array-index-key\n_jsxs(CircleRow,{children:[/*#__PURE__*/_jsx(Circle,{confirmed:step,disabled:!steps[i-1]&&i!==0,children:step?'✓':i+1}),/*#__PURE__*/_jsx(Connector,{prevConfirmed:step})]},i));}),/*#__PURE__*/_jsx(Circle,{disabled:!steps[steps.length-1],children:steps.length+1})]})});}","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/components/ProgressSteps/index.tsx"],"names":["React","styled","transparentize","RowBetween","AutoColumn","Wrapper","Grouping","Circle","div","theme","confirmed","disabled","colors","backgroundDisabled","success","primary","text","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","map","step","i","length"],"mappings":"mPAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,cAAT,KAA+B,UAA/B,CACA,OAASC,UAAT,KAA2B,QAA3B,CACA,OAASC,UAAT,KAA2B,WAA3B,C,wFAEA,GAAMC,CAAAA,OAAO,CAAGJ,MAAM,CAACG,UAAD,CAAT,2FAAb,CAIA,GAAME,CAAAA,QAAQ,CAAGL,MAAM,CAACE,UAAD,CAAT,oFAAd,CAIA,GAAMI,CAAAA,MAAM,CAAGN,MAAM,CAACO,GAAV,6RAGU,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUC,SAAV,MAAUA,SAAV,CAAqBC,QAArB,MAAqBA,QAArB,OAClBA,CAAAA,QAAQ,CAAGF,KAAK,CAACG,MAAN,CAAaC,kBAAhB,CAAqCH,SAAS,CAAGD,KAAK,CAACG,MAAN,CAAaE,OAAhB,CAA0BL,KAAK,CAACG,MAAN,CAAaG,OAD3E,EAHV,CAWD,mBAAGN,CAAAA,KAAH,OAAGA,KAAH,CAAUC,SAAV,OAAUA,SAAV,CAAqBC,QAArB,OAAqBA,QAArB,OACPA,CAAAA,QAAQ,CAAGF,KAAK,CAACG,MAAN,CAAaI,IAAhB,CAAuBN,SAAS,CAAGD,KAAK,CAACG,MAAN,CAAaE,OAAhB,CAA0B,SAD3D,EAXC,CAAZ,CAeA,GAAMG,CAAAA,SAAS,CAAGhB,MAAM,CAACO,GAAV,4IAAf,CAMA,GAAMU,CAAAA,SAAS,CAAGjB,MAAM,CAACO,GAAV,yNAMT,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,CAAUU,aAAV,OAAUA,aAAV,OAA8BjB,CAAAA,cAAc,CAAC,GAAD,CAAMiB,aAAa,CAAGV,KAAK,CAACG,MAAN,CAAaE,OAAhB,CAA0BL,KAAK,CAACG,MAAN,CAAaG,OAA1D,CAA5C,EANS,CAOT,mBAAGN,CAAAA,KAAH,OAAGA,KAAH,CAAUU,aAAV,OAAUA,aAAV,OAA+BA,CAAAA,aAAa,CAAGV,KAAK,CAACG,MAAN,CAAaG,OAAhB,CAA0BN,KAAK,CAACG,MAAN,CAAaC,kBAAnF,EAPS,CAAf,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAe,SAASO,CAAAA,eAAT,OAA0D,IAA/BC,CAAAA,KAA+B,OAA/BA,KAA+B,CACvE,mBACE,KAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,uBACE,MAAC,QAAD,YACGA,KAAK,CAACC,GAAN,CAAU,SAACC,IAAD,CAAOC,CAAP,CAAa,CACtB,oBACE;AACA,MAAC,SAAD,yBACE,KAAC,MAAD,EAAQ,SAAS,CAAED,IAAnB,CAAyB,QAAQ,CAAE,CAACF,KAAK,CAACG,CAAC,CAAG,CAAL,CAAN,EAAiBA,CAAC,GAAK,CAA1D,UACGD,IAAI,CAAG,GAAH,CAASC,CAAC,CAAG,CADpB,EADF,cAIE,KAAC,SAAD,EAAW,aAAa,CAAED,IAA1B,EAJF,GAAgBC,CAAhB,CAFF,EASD,CAVA,CADH,cAYE,KAAC,MAAD,EAAQ,QAAQ,CAAE,CAACH,KAAK,CAACA,KAAK,CAACI,MAAN,CAAe,CAAhB,CAAxB,UAA6CJ,KAAK,CAACI,MAAN,CAAe,CAA5D,EAZF,GADF,EADF,CAkBD","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { transparentize } from 'polished'\nimport { RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\n\nconst Wrapper = styled(AutoColumn)`\n  margin-top: 1.25rem;\n`\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n  color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.text : confirmed ? theme.colors.success : '#FFFFFF'};\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background-color: ;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed }) => transparentize(0.5, prevConfirmed ? theme.colors.success : theme.colors.primary)} 0%,\n    ${({ theme, prevConfirmed }) => (prevConfirmed ? theme.colors.primary : theme.colors.backgroundDisabled)} 80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps }: ProgressCirclesProps) {\n  return (\n    <Wrapper justify=\"center\">\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={!steps[i - 1] && i !== 0}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={!steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}