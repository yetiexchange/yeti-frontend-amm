{"ast":null,"code":"var _jsxFileName = \"H:\\\\XETI\\\\YETI-AMM-DEV\\\\src\\\\components\\\\SearchModal\\\\CommonBases.tsx\";\nimport React from 'react';\nimport { Text } from '@pancakeswap-libs/uikit';\nimport { currencyEquals, ETHER, Token } from '@pancakeswap-libs/sdk';\nimport styled from 'styled-components';\nimport { SUGGESTED_BASES } from '../../constants';\nimport { AutoColumn } from '../Column';\nimport QuestionHelper from '../QuestionHelper';\nimport { AutoRow } from '../Row';\nimport CurrencyLogo from '../CurrencyLogo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BaseWrapper = styled.div`\n  border: 1px solid ${({\n  theme,\n  disable\n}) => disable ? 'transparent' : theme.colors.tertiary};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({\n  disable\n}) => !disable && 'pointer'};\n    background-color: ${({\n  theme,\n  disable\n}) => !disable && theme.colors.invertedContrast};\n  }\n\n  background-color: ${({\n  theme,\n  disable\n}) => disable && theme.colors.tertiary};\n  opacity: ${({\n  disable\n}) => disable && '0.4'};\n`;\n_c = BaseWrapper;\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency\n}) {\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        children: \"Common bases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n        text: \"These tokens are commonly paired with other tokens.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoRow, {\n      gap: \"4px\",\n      children: [/*#__PURE__*/_jsxDEV(BaseWrapper, {\n        onClick: () => {\n          if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n            onSelect(ETHER);\n          }\n        },\n        disable: selectedCurrency === ETHER,\n        children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          currency: ETHER,\n          style: {\n            marginRight: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"BNB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), (chainId ? SUGGESTED_BASES[chainId] : []).map(token => {\n        const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address;\n        return /*#__PURE__*/_jsxDEV(BaseWrapper, {\n          onClick: () => !selected && onSelect(token),\n          disable: selected,\n          children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            currency: token,\n            style: {\n              marginRight: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: token.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, token.address, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c2 = CommonBases;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BaseWrapper\");\n$RefreshReg$(_c2, \"CommonBases\");","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/components/SearchModal/CommonBases.tsx"],"names":["React","Text","currencyEquals","ETHER","Token","styled","SUGGESTED_BASES","AutoColumn","QuestionHelper","AutoRow","CurrencyLogo","BaseWrapper","div","theme","disable","colors","tertiary","invertedContrast","CommonBases","chainId","onSelect","selectedCurrency","marginRight","map","token","selected","address","symbol"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap-libs/sdk'\nimport styled from 'styled-components'\n\nimport { SUGGESTED_BASES } from '../../constants'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.tertiary)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.invertedContrast};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.tertiary};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">Common bases</Text>\n        <QuestionHelper text=\"These tokens are commonly paired with other tokens.\" />\n      </AutoRow>\n      <AutoRow gap=\"4px\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}