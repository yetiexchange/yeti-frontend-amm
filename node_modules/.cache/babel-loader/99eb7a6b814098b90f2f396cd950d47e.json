{"ast":null,"code":"import _toConsumableArray from\"H:/XETI/YETI-AMM-DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _taggedTemplateLiteral from\"H:/XETI/YETI-AMM-DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import{ETHER,Token}from'@pancakeswap-libs/sdk';import React,{useMemo}from'react';import styled from'styled-components';import EthereumLogo from'../../assets/images/binance-logo.png';import useHttpLocations from'../../hooks/useHttpLocations';import{WrappedTokenInfo}from'../../state/lists/hooks';import Logo from'../Logo';import CoinLogo from\"../pancake/CoinLogo\";import{jsx as _jsx}from\"react/jsx-runtime\";var getTokenLogoURL=function getTokenLogoURL(address){return\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/smartchain/assets/\".concat(address,\"/logo.png\");};var StyledEthereumLogo=styled.img(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: \",\";\\n  height: \",\";\\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\\n  border-radius: 24px;\\n\"])),function(_ref){var size=_ref.size;return size;},function(_ref2){var size=_ref2.size;return size;});var StyledLogo=styled(Logo)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: \",\";\\n  height: \",\";\\n\"])),function(_ref3){var size=_ref3.size;return size;},function(_ref4){var size=_ref4.size;return size;});export default function CurrencyLogo(_ref5){var _currency$symbol3,_currency$symbol4;var currency=_ref5.currency,_ref5$size=_ref5.size,size=_ref5$size===void 0?'24px':_ref5$size,style=_ref5.style;var uriLocations=useHttpLocations(currency instanceof WrappedTokenInfo?currency.logoURI:undefined);var srcs=useMemo(function(){if(currency===ETHER)return[];if(currency instanceof Token){var _currency$symbol2;if(currency instanceof WrappedTokenInfo){var _currency$symbol;return[].concat(_toConsumableArray(uriLocations),[\"/images/coins/\".concat((_currency$symbol=currency===null||currency===void 0?void 0:currency.symbol)!==null&&_currency$symbol!==void 0?_currency$symbol:'token',\".png\"),getTokenLogoURL(currency.address)]);}return[\"/images/coins/\".concat((_currency$symbol2=currency===null||currency===void 0?void 0:currency.symbol)!==null&&_currency$symbol2!==void 0?_currency$symbol2:'token',\".png\"),getTokenLogoURL(currency.address)];}return[];},[currency,uriLocations]);if(currency===ETHER){return/*#__PURE__*/_jsx(StyledEthereumLogo,{src:EthereumLogo,size:size,style:style});}return(currency===null||currency===void 0?void 0:currency.symbol)?/*#__PURE__*/_jsx(CoinLogo,{size:size,srcs:srcs,alt:\"\".concat((_currency$symbol3=currency===null||currency===void 0?void 0:currency.symbol)!==null&&_currency$symbol3!==void 0?_currency$symbol3:'token',\" logo\"),style:style}):/*#__PURE__*/_jsx(StyledLogo,{size:size,srcs:srcs,alt:\"\".concat((_currency$symbol4=currency===null||currency===void 0?void 0:currency.symbol)!==null&&_currency$symbol4!==void 0?_currency$symbol4:'token',\" logo\"),style:style});}","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/components/CurrencyLogo/index.tsx"],"names":["ETHER","Token","React","useMemo","styled","EthereumLogo","useHttpLocations","WrappedTokenInfo","Logo","CoinLogo","getTokenLogoURL","address","StyledEthereumLogo","img","size","StyledLogo","CurrencyLogo","currency","style","uriLocations","logoURI","undefined","srcs","symbol"],"mappings":"mVAAA,OAAmBA,KAAnB,CAA0BC,KAA1B,KAAuC,uBAAvC,CACA,MAAOC,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,MAAOC,CAAAA,YAAP,KAAyB,sCAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,8BAA7B,CACA,OAASC,gBAAT,KAAiC,yBAAjC,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,C,2CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,OAAD,4GACuEA,OADvE,eAAxB,CAGA,GAAMC,CAAAA,kBAAkB,CAAGR,MAAM,CAACS,GAAV,4KACb,kBAAGC,CAAAA,IAAH,MAAGA,IAAH,OAAcA,CAAAA,IAAd,EADa,CAEZ,mBAAGA,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAFY,CAAxB,CAOA,GAAMC,CAAAA,UAAU,CAAGX,MAAM,CAACI,IAAD,CAAT,oGACL,mBAAGM,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EADK,CAEJ,mBAAGA,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAFI,CAAhB,CAKA,cAAe,SAASE,CAAAA,YAAT,OAQZ,4CAPDC,CAAAA,QAOC,OAPDA,QAOC,kBANDH,IAMC,CANDA,IAMC,qBANM,MAMN,YALDI,KAKC,OALDA,KAKC,CACD,GAAMC,CAAAA,YAAY,CAAGb,gBAAgB,CAACW,QAAQ,WAAYV,CAAAA,gBAApB,CAAuCU,QAAQ,CAACG,OAAhD,CAA0DC,SAA3D,CAArC,CAEA,GAAMC,CAAAA,IAAc,CAAGnB,OAAO,CAAC,UAAM,CACnC,GAAIc,QAAQ,GAAKjB,KAAjB,CAAwB,MAAO,EAAP,CAExB,GAAIiB,QAAQ,WAAYhB,CAAAA,KAAxB,CAA+B,uBAC7B,GAAIgB,QAAQ,WAAYV,CAAAA,gBAAxB,CAA0C,sBACxC,mCAAWY,YAAX,6CAA0CF,QAA1C,SAA0CA,QAA1C,iBAA0CA,QAAQ,CAAEM,MAApD,qDAA8D,OAA9D,SAA6Eb,eAAe,CAACO,QAAQ,CAACN,OAAV,CAA5F,GACD,CAED,MAAO,4CAAkBM,QAAlB,SAAkBA,QAAlB,iBAAkBA,QAAQ,CAAEM,MAA5B,uDAAsC,OAAtC,SAAqDb,eAAe,CAACO,QAAQ,CAACN,OAAV,CAApE,CAAP,CACD,CACD,MAAO,EAAP,CACD,CAX6B,CAW3B,CAACM,QAAD,CAAWE,YAAX,CAX2B,CAA9B,CAaA,GAAIF,QAAQ,GAAKjB,KAAjB,CAAwB,CACtB,mBAAO,KAAC,kBAAD,EAAoB,GAAG,CAAEK,YAAzB,CAAuC,IAAI,CAAES,IAA7C,CAAmD,KAAK,CAAEI,KAA1D,EAAP,CACD,CAED,MAAO,CAACD,QAAD,SAACA,QAAD,iBAACA,QAAD,CAAmBM,MAAnB,eACL,KAAC,QAAD,EAAU,IAAI,CAAET,IAAhB,CAAsB,IAAI,CAAEQ,IAA5B,CAAkC,GAAG,8BAAKL,QAAL,SAAKA,QAAL,iBAAKA,QAAQ,CAAEM,MAAf,uDAAyB,OAAzB,SAArC,CAA8E,KAAK,CAAEL,KAArF,EADK,cAGL,KAAC,UAAD,EAAY,IAAI,CAAEJ,IAAlB,CAAwB,IAAI,CAAEQ,IAA9B,CAAoC,GAAG,8BAAKL,QAAL,SAAKA,QAAL,iBAAKA,QAAQ,CAAEM,MAAf,uDAAyB,OAAzB,SAAvC,CAAgF,KAAK,CAAEL,KAAvF,EAHF,CAKD","sourcesContent":["import { Currency, ETHER, Token } from '@pancakeswap-libs/sdk'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport EthereumLogo from '../../assets/images/binance-logo.png'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport Logo from '../Logo'\nimport CoinLogo from \"../pancake/CoinLogo\"\n\nconst getTokenLogoURL = (address: string) =>\n  `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/smartchain/assets/${address}/logo.png`\n\nconst StyledEthereumLogo = styled.img<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  border-radius: 24px;\n`\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, `/images/coins/${currency?.symbol ?? 'token'}.png`, getTokenLogoURL(currency.address)]\n      }\n\n      return [`/images/coins/${currency?.symbol ?? 'token'}.png`, getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <StyledEthereumLogo src={EthereumLogo} size={size} style={style} />\n  }\n\n  return (currency as any)?.symbol ? (\n    <CoinLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n  ) : (\n    <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}