{"ast":null,"code":"import React,{useMemo}from'react';import{CheckmarkCircleIcon,ErrorIcon,Flex,LinkExternal,Text,Modal,Button}from'@pancakeswap-libs/uikit';import{useActiveWeb3React}from'hooks';import{getEtherscanLink}from'utils';import{isTransactionRecent,useAllTransactions}from'state/transactions/hooks';import Loader from'components/Loader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";// TODO: Fix UI Kit typings\nvar defaultOnDismiss=function defaultOnDismiss(){return null;};var newTransactionsFirst=function newTransactionsFirst(a,b){return b.addedTime-a.addedTime;};var getRowStatus=function getRowStatus(sortedRecentTransaction){var hash=sortedRecentTransaction.hash,receipt=sortedRecentTransaction.receipt;if(!hash){return{icon:/*#__PURE__*/_jsx(Loader,{}),color:'text'};}if(hash&&(receipt===null||receipt===void 0?void 0:receipt.status)===1){return{icon:/*#__PURE__*/_jsx(CheckmarkCircleIcon,{color:\"success\"}),color:'success'};}return{icon:/*#__PURE__*/_jsx(ErrorIcon,{color:\"failure\"}),color:'failure'};};var RecentTransactionsModal=function RecentTransactionsModal(_ref){var _ref$onDismiss=_ref.onDismiss,onDismiss=_ref$onDismiss===void 0?defaultOnDismiss:_ref$onDismiss;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId;var allTransactions=useAllTransactions();// Logic taken from Web3Status/index.tsx line 175\nvar sortedRecentTransactions=useMemo(function(){var txs=Object.values(allTransactions);return txs.filter(isTransactionRecent).sort(newTransactionsFirst);},[allTransactions]);return/*#__PURE__*/_jsxs(Modal,{title:\"Recent Transactions\",onDismiss:onDismiss,children:[!account&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"center\",flexDirection:\"column\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{mb:\"8px\",bold:true,children:\"Please connect your wallet to view your recent transactions\"}),/*#__PURE__*/_jsx(Button,{variant:\"tertiary\",size:\"sm\",onClick:onDismiss,children:\"Close\"})]}),account&&chainId&&sortedRecentTransactions.length===0&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"center\",flexDirection:\"column\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{mb:\"8px\",bold:true,children:\"No recent transactions\"}),/*#__PURE__*/_jsx(Button,{variant:\"tertiary\",size:\"sm\",onClick:onDismiss,children:\"Close\"})]}),account&&chainId&&sortedRecentTransactions.map(function(sortedRecentTransaction){var hash=sortedRecentTransaction.hash,summary=sortedRecentTransaction.summary;var _getRowStatus=getRowStatus(sortedRecentTransaction),icon=_getRowStatus.icon,color=_getRowStatus.color;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"4px\",children:[/*#__PURE__*/_jsx(LinkExternal,{href:getEtherscanLink(chainId,hash,'transaction'),color:color,children:summary!==null&&summary!==void 0?summary:hash}),icon]},hash)});})]});};export default RecentTransactionsModal;","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/components/PageHeader/RecentTransactionsModal.tsx"],"names":["React","useMemo","CheckmarkCircleIcon","ErrorIcon","Flex","LinkExternal","Text","Modal","Button","useActiveWeb3React","getEtherscanLink","isTransactionRecent","useAllTransactions","Loader","defaultOnDismiss","newTransactionsFirst","a","b","addedTime","getRowStatus","sortedRecentTransaction","hash","receipt","icon","color","status","RecentTransactionsModal","onDismiss","account","chainId","allTransactions","sortedRecentTransactions","txs","Object","values","filter","sort","length","map","summary"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { CheckmarkCircleIcon, ErrorIcon, Flex, LinkExternal, Text, Modal, Button } from '@pancakeswap-libs/uikit'\nimport { useActiveWeb3React } from 'hooks'\nimport { getEtherscanLink } from 'utils'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport Loader from 'components/Loader'\n\ntype RecentTransactionsModalProps = {\n  onDismiss?: () => void\n}\n\n// TODO: Fix UI Kit typings\nconst defaultOnDismiss = () => null\n\nconst newTransactionsFirst = (a: TransactionDetails, b: TransactionDetails) => b.addedTime - a.addedTime\n\nconst getRowStatus = (sortedRecentTransaction: TransactionDetails) => {\n  const { hash, receipt } = sortedRecentTransaction\n\n  if (!hash) {\n    return { icon: <Loader />, color: 'text' }\n  }\n\n  if (hash && receipt?.status === 1) {\n    return { icon: <CheckmarkCircleIcon color=\"success\" />, color: 'success' }\n  }\n\n  return { icon: <ErrorIcon color=\"failure\" />, color: 'failure' }\n}\n\nconst RecentTransactionsModal = ({ onDismiss = defaultOnDismiss }: RecentTransactionsModalProps) => {\n  const { account, chainId } = useActiveWeb3React()\n  const allTransactions = useAllTransactions()\n\n  // Logic taken from Web3Status/index.tsx line 175\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  return (\n    <Modal title=\"Recent Transactions\" onDismiss={onDismiss}>\n      {!account && (\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\n          <Text mb=\"8px\" bold>\n            Please connect your wallet to view your recent transactions\n          </Text>\n          <Button variant=\"tertiary\" size=\"sm\" onClick={onDismiss}>\n            Close\n          </Button>\n        </Flex>\n      )}\n      {account && chainId && sortedRecentTransactions.length === 0 && (\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\n          <Text mb=\"8px\" bold>\n            No recent transactions\n          </Text>\n          <Button variant=\"tertiary\" size=\"sm\" onClick={onDismiss}>\n            Close\n          </Button>\n        </Flex>\n      )}\n      {account &&\n        chainId &&\n        sortedRecentTransactions.map((sortedRecentTransaction) => {\n          const { hash, summary } = sortedRecentTransaction\n          const { icon, color } = getRowStatus(sortedRecentTransaction)\n\n          return (\n            <>\n              <Flex key={hash} alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n                <LinkExternal href={getEtherscanLink(chainId, hash, 'transaction')} color={color}>\n                  {summary ?? hash}\n                </LinkExternal>\n                {icon}\n              </Flex>\n            </>\n          )\n        })}\n    </Modal>\n  )\n}\n\nexport default RecentTransactionsModal\n"]},"metadata":{},"sourceType":"module"}