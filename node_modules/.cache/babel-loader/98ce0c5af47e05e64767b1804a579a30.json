{"ast":null,"code":"var _jsxFileName = \"H:\\\\XETI\\\\YETI-AMM-DEV\\\\src\\\\components\\\\PageHeader\\\\SlippageToleranceSetting.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, Flex, Input, Text } from '@pancakeswap-libs/uikit';\nimport { useUserSlippageTolerance } from 'state/user/hooks';\nimport QuestionHelper from '../QuestionHelper';\nimport TranslatedText from '../TranslatedText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_SLIPPAGE = 5000;\nconst RISKY_SLIPPAGE_LOW = 50;\nconst RISKY_SLIPPAGE_HIGH = 500;\nconst StyledSlippageToleranceSettings = styled.div`\n  margin-bottom: 16px;\n`;\n_c = StyledSlippageToleranceSettings;\nconst Option = styled.div`\n  padding: 0 4px;\n`;\n_c2 = Option;\nconst Options = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n\n  ${Option}:first-child {\n    padding-left: 0;\n  }\n\n  ${Option}:last-child {\n    padding-right: 0;\n  }\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`;\n_c3 = Options;\nconst Label = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: 8px;\n`;\n_c4 = Label;\nconst predefinedValues = [{\n  label: '0.1%',\n  value: 0.1\n}, {\n  label: '0.5%',\n  value: 0.5\n}, {\n  label: '1%',\n  value: 1\n}];\n\nconst SlippageToleranceSettings = () => {\n  _s();\n\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance();\n  const [value, setValue] = useState(userSlippageTolerance / 100);\n  const [error, setError] = useState(null);\n\n  const handleChange = evt => {\n    const {\n      value: inputValue\n    } = evt.target;\n    setValue(parseFloat(inputValue));\n  }; // Updates local storage if value is valid\n\n\n  useEffect(() => {\n    try {\n      const rawValue = value * 100;\n\n      if (!Number.isNaN(rawValue) && rawValue > 0 && rawValue < MAX_SLIPPAGE) {\n        setUserslippageTolerance(rawValue);\n        setError(null);\n      } else {\n        setError('Enter a valid slippage percentage');\n      }\n    } catch {\n      setError('Enter a valid slippage percentage');\n    }\n  }, [value, setError, setUserslippageTolerance]); // Notify user if slippage is risky\n\n  useEffect(() => {\n    if (userSlippageTolerance < RISKY_SLIPPAGE_LOW) {\n      setError('Your transaction may fail');\n    } else if (userSlippageTolerance > RISKY_SLIPPAGE_HIGH) {\n      setError('Your transaction may be frontrun');\n    }\n  }, [userSlippageTolerance, setError]);\n  return /*#__PURE__*/_jsxDEV(StyledSlippageToleranceSettings, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: {\n          fontWeight: 600\n        },\n        children: /*#__PURE__*/_jsxDEV(TranslatedText, {\n          translationId: 88,\n          children: \"Slippage tolerance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n        text: \"Your transaction will revert if the price changes unfavorably by more than this percentage.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Options, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        mb: ['8px', 0],\n        mr: [0, '8px'],\n        children: predefinedValues.map(({\n          label,\n          value: predefinedValue\n        }) => {\n          const handleClick = () => setValue(predefinedValue);\n\n          return /*#__PURE__*/_jsxDEV(Option, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: value === predefinedValue ? 'primary' : 'tertiary',\n              onClick: handleClick,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, predefinedValue, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            scale: \"lg\",\n            step: 0.1,\n            min: 0.1,\n            placeholder: \"5%\",\n            value: value,\n            onChange: handleChange,\n            isWarning: error !== null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"18px\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Text, {\n      mt: \"8px\",\n      color: \"failure\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SlippageToleranceSettings, \"pFG4T5+1+Vmw/arCtYDx39HamRs=\", false, function () {\n  return [useUserSlippageTolerance];\n});\n\n_c5 = SlippageToleranceSettings;\nexport default SlippageToleranceSettings;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledSlippageToleranceSettings\");\n$RefreshReg$(_c2, \"Option\");\n$RefreshReg$(_c3, \"Options\");\n$RefreshReg$(_c4, \"Label\");\n$RefreshReg$(_c5, \"SlippageToleranceSettings\");","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/components/PageHeader/SlippageToleranceSetting.tsx"],"names":["React","useEffect","useState","styled","Button","Flex","Input","Text","useUserSlippageTolerance","QuestionHelper","TranslatedText","MAX_SLIPPAGE","RISKY_SLIPPAGE_LOW","RISKY_SLIPPAGE_HIGH","StyledSlippageToleranceSettings","div","Option","Options","theme","mediaQueries","sm","Label","predefinedValues","label","value","SlippageToleranceSettings","userSlippageTolerance","setUserslippageTolerance","setValue","error","setError","handleChange","evt","inputValue","target","parseFloat","rawValue","Number","isNaN","fontWeight","map","predefinedValue","handleClick"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, Text } from '@pancakeswap-libs/uikit'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport QuestionHelper from '../QuestionHelper'\nimport TranslatedText from '../TranslatedText'\n\nconst MAX_SLIPPAGE = 5000\nconst RISKY_SLIPPAGE_LOW = 50\nconst RISKY_SLIPPAGE_HIGH = 500\n\nconst StyledSlippageToleranceSettings = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Option = styled.div`\n  padding: 0 4px;\n`\n\nconst Options = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n\n  ${Option}:first-child {\n    padding-left: 0;\n  }\n\n  ${Option}:last-child {\n    padding-right: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst Label = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: 8px;\n`\n\nconst predefinedValues = [\n  { label: '0.1%', value: 0.1 },\n  { label: '0.5%', value: 0.5 },\n  { label: '1%', value: 1 }\n]\n\nconst SlippageToleranceSettings = () => {\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [value, setValue] = useState(userSlippageTolerance / 100)\n  const [error, setError] = useState<string | null>(null)\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(parseFloat(inputValue))\n  }\n\n  // Updates local storage if value is valid\n  useEffect(() => {\n    try {\n      const rawValue = value * 100\n      if (!Number.isNaN(rawValue) && rawValue > 0 && rawValue < MAX_SLIPPAGE) {\n        setUserslippageTolerance(rawValue)\n        setError(null)\n      } else {\n        setError('Enter a valid slippage percentage')\n      }\n    } catch {\n      setError('Enter a valid slippage percentage')\n    }\n  }, [value, setError, setUserslippageTolerance])\n\n  // Notify user if slippage is risky\n  useEffect(() => {\n    if (userSlippageTolerance < RISKY_SLIPPAGE_LOW) {\n      setError('Your transaction may fail')\n    } else if (userSlippageTolerance > RISKY_SLIPPAGE_HIGH) {\n      setError('Your transaction may be frontrun')\n    }\n  }, [userSlippageTolerance, setError])\n\n  return (\n    <StyledSlippageToleranceSettings>\n      <Label>\n        <Text style={{ fontWeight: 600 }}>\n          <TranslatedText translationId={88}>Slippage tolerance</TranslatedText>\n        </Text>\n        <QuestionHelper text=\"Your transaction will revert if the price changes unfavorably by more than this percentage.\" />\n      </Label>\n      <Options>\n        <Flex mb={['8px', 0]} mr={[0, '8px']}>\n          {predefinedValues.map(({ label, value: predefinedValue }) => {\n            const handleClick = () => setValue(predefinedValue)\n\n            return (\n              <Option key={predefinedValue}>\n                <Button variant={value === predefinedValue ? 'primary' : 'tertiary'} onClick={handleClick}>\n                  {label}\n                </Button>\n              </Option>\n            )\n          })}\n        </Flex>\n        <Flex alignItems=\"center\">\n          <Option>\n            <Input\n              type=\"number\"\n              scale=\"lg\"\n              step={0.1}\n              min={0.1}\n              placeholder=\"5%\"\n              value={value}\n              onChange={handleChange}\n              isWarning={error !== null}\n            />\n          </Option>\n          <Option>\n            <Text fontSize=\"18px\">%</Text>\n          </Option>\n        </Flex>\n      </Options>\n      {error && (\n        <Text mt=\"8px\" color=\"failure\">\n          {error}\n        </Text>\n      )}\n    </StyledSlippageToleranceSettings>\n  )\n}\n\nexport default SlippageToleranceSettings\n"]},"metadata":{},"sourceType":"module"}