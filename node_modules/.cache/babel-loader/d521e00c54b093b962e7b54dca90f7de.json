{"ast":null,"code":"var _jsxFileName = \"H:\\\\XETI\\\\YETI-AMM-DEV\\\\src\\\\pages\\\\Pool\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useMemo } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Button, CardBody, Text } from '@pancakeswap-libs/uikit';\nimport { Link } from 'react-router-dom';\nimport CardNav from 'components/CardNav';\nimport Question from 'components/QuestionHelper';\nimport FullPositionCard from 'components/PositionCard';\nimport { useUserHasLiquidityInAllTokens } from 'data/V1';\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks';\nimport { StyledInternalLink, TYPE } from 'components/Shared';\nimport { LightCard } from 'components/Card';\nimport { RowBetween } from 'components/Row';\nimport { AutoColumn } from 'components/Column';\nimport { useActiveWeb3React } from 'hooks';\nimport { usePairs } from 'data/Reserves';\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks';\nimport { Dots } from 'components/swap/styleds';\nimport TranslatedText from 'components/TranslatedText';\nimport { TranslateString } from 'utils/translateTextHelpers';\nimport PageHeader from 'components/PageHeader';\nimport AppBody from '../AppBody';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  body: Body\n} = TYPE;\nexport default function Pool() {\n  _s();\n\n  const theme = useContext(ThemeContext);\n  const {\n    account\n  } = useActiveWeb3React(); // fetch the user's balances of all tracked V2 LP tokens\n\n  const trackedTokenPairs = useTrackedTokenPairs();\n  const tokenPairsWithLiquidityTokens = useMemo(() => trackedTokenPairs.map(tokens => ({\n    liquidityToken: toV2LiquidityToken(tokens),\n    tokens\n  })), [trackedTokenPairs]);\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [tokenPairsWithLiquidityTokens]);\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(account !== null && account !== void 0 ? account : undefined, liquidityTokens); // fetch the reserves for all V2 pools in which the user has a balance\n\n  const liquidityTokensWithBalances = useMemo(() => tokenPairsWithLiquidityTokens.filter(({\n    liquidityToken\n  }) => {\n    var _v2PairsBalances$liqu;\n\n    return (_v2PairsBalances$liqu = v2PairsBalances[liquidityToken.address]) === null || _v2PairsBalances$liqu === void 0 ? void 0 : _v2PairsBalances$liqu.greaterThan('0');\n  }), [tokenPairsWithLiquidityTokens, v2PairsBalances]);\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({\n    tokens\n  }) => tokens));\n  const v2IsLoading = fetchingV2PairBalances || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.length) < liquidityTokensWithBalances.length || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.some(V2Pair => !V2Pair));\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter(v2Pair => Boolean(v2Pair));\n  const hasV1Liquidity = useUserHasLiquidityInAllTokens();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardNav, {\n      activeIndex: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: \"Liquidity\",\n        description: \"Add liquidity to receive LP tokens\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"join-pool-button\",\n          as: Link,\n          to: \"/add/ETH\",\n          children: /*#__PURE__*/_jsxDEV(TranslatedText, {\n            translationId: 100,\n            children: \"Add Liquidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"lg\",\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"12px\",\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n              padding: \"0 8px\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                color: theme.colors.text,\n                children: /*#__PURE__*/_jsxDEV(TranslatedText, {\n                  translationId: 102,\n                  children: \"Your Liquidity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Question, {\n                text: TranslateString(130, 'When you add liquidity, you are given pool tokens that represent your share. If you donâ€™t see a pool you joined in this list, try importing a pool below.')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), !account ? /*#__PURE__*/_jsxDEV(LightCard, {\n              padding: \"40px\",\n              children: /*#__PURE__*/_jsxDEV(Body, {\n                color: theme.colors.textDisabled,\n                textAlign: \"center\",\n                children: \"Connect to a wallet to view your liquidity.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this) : v2IsLoading ? /*#__PURE__*/_jsxDEV(LightCard, {\n              padding: \"40px\",\n              children: /*#__PURE__*/_jsxDEV(Body, {\n                color: theme.colors.textDisabled,\n                textAlign: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Dots, {\n                  children: \"Loading\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this) : (allV2PairsWithLiquidity === null || allV2PairsWithLiquidity === void 0 ? void 0 : allV2PairsWithLiquidity.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: allV2PairsWithLiquidity.map(v2Pair => /*#__PURE__*/_jsxDEV(FullPositionCard, {\n                pair: v2Pair\n              }, v2Pair.liquidityToken.address, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this))\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(LightCard, {\n              padding: \"40px\",\n              children: /*#__PURE__*/_jsxDEV(Body, {\n                color: theme.colors.textDisabled,\n                textAlign: \"center\",\n                children: /*#__PURE__*/_jsxDEV(TranslatedText, {\n                  translationId: 104,\n                  children: \"No liquidity found.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"14px\",\n                style: {\n                  padding: '.5rem 0 .5rem 0'\n                },\n                children: [hasV1Liquidity ? 'Uniswap V1 liquidity found!' : TranslateString(106, \"Don't see a pool you joined?\"), ' ', /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                  id: \"import-pool-link\",\n                  to: hasV1Liquidity ? '/migrate/v1' : '/find',\n                  children: hasV1Liquidity ? 'Migrate now.' : TranslateString(108, 'Import it.')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"14px\",\n                style: {\n                  padding: '.5rem 0 .5rem 0'\n                },\n                children: \"Or, if you staked your LP tokens in a farm, unstake them to see them here.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Pool, \"U3jfUEvbNfHam8js2tkBdzQ5hvE=\", false, function () {\n  return [useActiveWeb3React, useTrackedTokenPairs, useTokenBalancesWithLoadingIndicator, usePairs, useUserHasLiquidityInAllTokens];\n});\n\n_c = Pool;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pool\");","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/pages/Pool/index.tsx"],"names":["React","useContext","useMemo","ThemeContext","Button","CardBody","Text","Link","CardNav","Question","FullPositionCard","useUserHasLiquidityInAllTokens","useTokenBalancesWithLoadingIndicator","StyledInternalLink","TYPE","LightCard","RowBetween","AutoColumn","useActiveWeb3React","usePairs","toV2LiquidityToken","useTrackedTokenPairs","Dots","TranslatedText","TranslateString","PageHeader","AppBody","body","Body","Pool","theme","account","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityToken","liquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","undefined","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","pair","v2Pair","Boolean","hasV1Liquidity","width","colors","text","textDisabled","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,QAAuC,yBAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,8BAAT,QAA+C,SAA/C;AACA,SAASC,oCAAT,QAAqD,oBAArD;AACA,SAASC,kBAAT,EAA6BC,IAA7B,QAAyC,mBAAzC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,kBAAT,EAA6BC,oBAA7B,QAAyD,kBAAzD;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAEA,MAAM;AAAEC,EAAAA,IAAI,EAAEC;AAAR,IAAiBd,IAAvB;AAEA,eAAe,SAASe,IAAT,GAAgB;AAAA;;AAC7B,QAAMC,KAAK,GAAG7B,UAAU,CAACE,YAAD,CAAxB;AACA,QAAM;AAAE4B,IAAAA;AAAF,MAAcb,kBAAkB,EAAtC,CAF6B,CAI7B;;AACA,QAAMc,iBAAiB,GAAGX,oBAAoB,EAA9C;AACA,QAAMY,6BAA6B,GAAG/B,OAAO,CAC3C,MAAM8B,iBAAiB,CAACE,GAAlB,CAAuBC,MAAD,KAAa;AAAEC,IAAAA,cAAc,EAAEhB,kBAAkB,CAACe,MAAD,CAApC;AAA8CA,IAAAA;AAA9C,GAAb,CAAtB,CADqC,EAE3C,CAACH,iBAAD,CAF2C,CAA7C;AAIA,QAAMK,eAAe,GAAGnC,OAAO,CAAC,MAAM+B,6BAA6B,CAACC,GAA9B,CAAmCI,KAAD,IAAWA,KAAK,CAACF,cAAnD,CAAP,EAA2E,CACxGH,6BADwG,CAA3E,CAA/B;AAGA,QAAM,CAACM,eAAD,EAAkBC,sBAAlB,IAA4C5B,oCAAoC,CACpFmB,OADoF,aACpFA,OADoF,cACpFA,OADoF,GACzEU,SADyE,EAEpFJ,eAFoF,CAAtF,CAb6B,CAkB7B;;AACA,QAAMK,2BAA2B,GAAGxC,OAAO,CACzC,MACE+B,6BAA6B,CAACU,MAA9B,CAAqC,CAAC;AAAEP,IAAAA;AAAF,GAAD;AAAA;;AAAA,oCACnCG,eAAe,CAACH,cAAc,CAACQ,OAAhB,CADoB,0DACnC,sBAAyCC,WAAzC,CAAqD,GAArD,CADmC;AAAA,GAArC,CAFuC,EAKzC,CAACZ,6BAAD,EAAgCM,eAAhC,CALyC,CAA3C;AAQA,QAAMO,OAAO,GAAG3B,QAAQ,CAACuB,2BAA2B,CAACR,GAA5B,CAAgC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgBA,MAAhD,CAAD,CAAxB;AACA,QAAMY,WAAW,GACfP,sBAAsB,IAAI,CAAAM,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,MAAT,IAAkBN,2BAA2B,CAACM,MAAxE,KAAkFF,OAAlF,aAAkFA,OAAlF,uBAAkFA,OAAO,CAAEG,IAAT,CAAeC,MAAD,IAAY,CAACA,MAA3B,CAAlF,CADF;AAGA,QAAMC,uBAAuB,GAAGL,OAAO,CAACZ,GAAR,CAAY,CAAC,GAAGkB,IAAH,CAAD,KAAcA,IAA1B,EAAgCT,MAAhC,CAAwCU,MAAD,IAA4BC,OAAO,CAACD,MAAD,CAA1E,CAAhC;AAEA,QAAME,cAAc,GAAG5C,8BAA8B,EAArD;AAEA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,WAAW,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,WAAlB;AAA8B,QAAA,WAAW,EAAC,oCAA1C;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,kBAAX;AAA8B,UAAA,EAAE,EAAEJ,IAAlC;AAAwC,UAAA,EAAE,EAAC,UAA3C;AAAA,iCACE,QAAC,cAAD;AAAgB,YAAA,aAAa,EAAE,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,UAAD;AAAY,QAAA,GAAG,EAAC,IAAhB;AAAqB,QAAA,OAAO,EAAC,QAA7B;AAAA,+BACE,QAAC,QAAD;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,GAAG,EAAC,MAAhB;AAAuB,YAAA,KAAK,EAAE;AAAEiD,cAAAA,KAAK,EAAE;AAAT,aAA9B;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,OAApB;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAE1B,KAAK,CAAC2B,MAAN,CAAaC,IAA1B;AAAA,uCACE,QAAC,cAAD;AAAgB,kBAAA,aAAa,EAAE,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,QAAD;AACE,gBAAA,IAAI,EAAElC,eAAe,CACnB,GADmB,EAEnB,2JAFmB;AADvB;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAaG,CAACO,OAAD,gBACC,QAAC,SAAD;AAAW,cAAA,OAAO,EAAC,MAAnB;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAED,KAAK,CAAC2B,MAAN,CAAaE,YAA1B;AAAwC,gBAAA,SAAS,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADD,GAMGZ,WAAW,gBACb,QAAC,SAAD;AAAW,cAAA,OAAO,EAAC,MAAnB;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAEjB,KAAK,CAAC2B,MAAN,CAAaE,YAA1B;AAAwC,gBAAA,SAAS,EAAC,QAAlD;AAAA,uCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADa,GAMX,CAAAR,uBAAuB,SAAvB,IAAAA,uBAAuB,WAAvB,YAAAA,uBAAuB,CAAEH,MAAzB,IAAkC,CAAlC,gBACF;AAAA,wBACGG,uBAAuB,CAACjB,GAAxB,CAA6BmB,MAAD,iBAC3B,QAAC,gBAAD;AAAsD,gBAAA,IAAI,EAAEA;AAA5D,iBAAuBA,MAAM,CAACjB,cAAP,CAAsBQ,OAA7C;AAAA;AAAA;AAAA;AAAA,sBADD;AADH,6BADE,gBAOF,QAAC,SAAD;AAAW,cAAA,OAAO,EAAC,MAAnB;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAEd,KAAK,CAAC2B,MAAN,CAAaE,YAA1B;AAAwC,gBAAA,SAAS,EAAC,QAAlD;AAAA,uCACE,QAAC,cAAD;AAAgB,kBAAA,aAAa,EAAE,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhCJ,eAuCE;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,QAAQ,EAAC,MAAf;AAAsB,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,OAAO,EAAE;AAAX,iBAA7B;AAAA,2BACGL,cAAc,GACX,6BADW,GAEX/B,eAAe,CAAC,GAAD,EAAM,8BAAN,CAHrB,EAG4D,GAH5D,eAIE,QAAC,kBAAD;AAAoB,kBAAA,EAAE,EAAC,kBAAvB;AAA0C,kBAAA,EAAE,EAAE+B,cAAc,GAAG,aAAH,GAAmB,OAA/E;AAAA,4BACGA,cAAc,GAAG,cAAH,GAAoB/B,eAAe,CAAC,GAAD,EAAM,YAAN;AADpD;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eASE,QAAC,IAAD;AAAM,gBAAA,QAAQ,EAAC,MAAf;AAAsB,gBAAA,KAAK,EAAE;AAAEoC,kBAAAA,OAAO,EAAE;AAAX,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAqED;;GAxGuB/B,I;UAEFX,kB,EAGMG,oB,EAQwBT,oC,EAclCO,Q,EAMOR,8B;;;KAjCDkB,I","sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Pair } from '@pancakeswap-libs/sdk'\nimport { Button, CardBody, Text } from '@pancakeswap-libs/uikit'\nimport { Link } from 'react-router-dom'\nimport CardNav from 'components/CardNav'\nimport Question from 'components/QuestionHelper'\nimport FullPositionCard from 'components/PositionCard'\nimport { useUserHasLiquidityInAllTokens } from 'data/V1'\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\nimport { StyledInternalLink, TYPE } from 'components/Shared'\nimport { LightCard } from 'components/Card'\nimport { RowBetween } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\n\nimport { useActiveWeb3React } from 'hooks'\nimport { usePairs } from 'data/Reserves'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\nimport { Dots } from 'components/swap/styleds'\nimport TranslatedText from 'components/TranslatedText'\nimport { TranslateString } from 'utils/translateTextHelpers'\nimport PageHeader from 'components/PageHeader'\nimport AppBody from '../AppBody'\n\nconst { body: Body } = TYPE\n\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken), [\n    tokenPairsWithLiquidityTokens,\n  ])\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  const hasV1Liquidity = useUserHasLiquidityInAllTokens()\n\n  return (\n    <>\n      <CardNav activeIndex={1} />\n      <AppBody>\n        <PageHeader title=\"Liquidity\" description=\"Add liquidity to receive LP tokens\">\n          <Button id=\"join-pool-button\" as={Link} to=\"/add/ETH\">\n            <TranslatedText translationId={100}>Add Liquidity</TranslatedText>\n          </Button>\n        </PageHeader>\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <CardBody>\n            <AutoColumn gap=\"12px\" style={{ width: '100%' }}>\n              <RowBetween padding=\"0 8px\">\n                <Text color={theme.colors.text}>\n                  <TranslatedText translationId={102}>Your Liquidity</TranslatedText>\n                </Text>\n                <Question\n                  text={TranslateString(\n                    130,\n                    'When you add liquidity, you are given pool tokens that represent your share. If you donâ€™t see a pool you joined in this list, try importing a pool below.'\n                  )}\n                />\n              </RowBetween>\n\n              {!account ? (\n                <LightCard padding=\"40px\">\n                  <Body color={theme.colors.textDisabled} textAlign=\"center\">\n                    Connect to a wallet to view your liquidity.\n                  </Body>\n                </LightCard>\n              ) : v2IsLoading ? (\n                <LightCard padding=\"40px\">\n                  <Body color={theme.colors.textDisabled} textAlign=\"center\">\n                    <Dots>Loading</Dots>\n                  </Body>\n                </LightCard>\n              ) : allV2PairsWithLiquidity?.length > 0 ? (\n                <>\n                  {allV2PairsWithLiquidity.map((v2Pair) => (\n                    <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                  ))}\n                </>\n              ) : (\n                <LightCard padding=\"40px\">\n                  <Body color={theme.colors.textDisabled} textAlign=\"center\">\n                    <TranslatedText translationId={104}>No liquidity found.</TranslatedText>\n                  </Body>\n                </LightCard>\n              )}\n\n              <div>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  {hasV1Liquidity\n                    ? 'Uniswap V1 liquidity found!'\n                    : TranslateString(106, \"Don't see a pool you joined?\")}{' '}\n                  <StyledInternalLink id=\"import-pool-link\" to={hasV1Liquidity ? '/migrate/v1' : '/find'}>\n                    {hasV1Liquidity ? 'Migrate now.' : TranslateString(108, 'Import it.')}\n                  </StyledInternalLink>\n                </Text>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  Or, if you staked your LP tokens in a farm, unstake them to see them here.\n                </Text>\n              </div>\n            </AutoColumn>\n          </CardBody>\n        </AutoColumn>\n      </AppBody>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}