{"ast":null,"code":"var _jsxFileName = \"H:\\\\XETI\\\\YETI-AMM-DEV\\\\src\\\\components\\\\Menu\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { allLanguages } from 'constants/localisation/languageCodes';\nimport { LanguageContext } from 'hooks/LanguageContext';\nimport useTheme from 'hooks/useTheme';\nimport useGetPriceData from 'hooks/useGetPriceData';\nimport { injected, bsc, walletconnect } from 'connectors';\nimport links from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = props => {\n  _s();\n\n  const {\n    account,\n    activate,\n    deactivate\n  } = useWeb3React();\n  const {\n    selectedLanguage,\n    setSelectedLanguage\n  } = useContext(LanguageContext);\n  const {\n    isDark,\n    toggleTheme\n  } = useTheme();\n  const cakePriceUsd = useGetPriceData();\n  return /*#__PURE__*/_jsxDEV(UikitMenu, {\n    links: links,\n    priceLink: \"https://www.coingecko.com/en/coins/goose-finance\",\n    account: account,\n    login: connectorId => {\n      if (connectorId === 'walletconnect') {\n        return activate(walletconnect);\n      }\n\n      if (connectorId === 'bsc') {\n        return activate(bsc);\n      }\n\n      return activate(injected);\n    },\n    logout: deactivate,\n    isDark: isDark,\n    toggleTheme: toggleTheme,\n    currentLang: (selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.code) || '',\n    langs: allLanguages,\n    setLang: setSelectedLanguage,\n    cakePriceUsd: cakePriceUsd,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Menu, \"mMH8wcgdOFyh92YCChJ40d/heNg=\", false, function () {\n  return [useWeb3React, useTheme, useGetPriceData];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/components/Menu/index.tsx"],"names":["React","useContext","Menu","UikitMenu","useWeb3React","allLanguages","LanguageContext","useTheme","useGetPriceData","injected","bsc","walletconnect","links","props","account","activate","deactivate","selectedLanguage","setSelectedLanguage","isDark","toggleTheme","cakePriceUsd","connectorId","code"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAI,IAAIC,SAAjB,QAA+C,yBAA/C;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,aAAxB,QAA6C,YAA7C;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMV,IAAc,GAAGW,KAAK,IAAI;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAoCZ,YAAY,EAAtD;AACA,QAAM;AAAEa,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA4CjB,UAAU,CAACK,eAAD,CAA5D;AACA,QAAM;AAAEa,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0Bb,QAAQ,EAAxC;AACA,QAAMc,YAAY,GAAGb,eAAe,EAApC;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAEI,KADT;AAEE,IAAA,SAAS,EAAC,kDAFZ;AAGE,IAAA,OAAO,EAAEE,OAHX;AAIE,IAAA,KAAK,EAAGQ,WAAD,IAA8B;AACnC,UAAIA,WAAW,KAAK,eAApB,EAAqC;AACnC,eAAOP,QAAQ,CAACJ,aAAD,CAAf;AACD;;AAED,UAAIW,WAAW,KAAK,KAApB,EAA2B;AACzB,eAAOP,QAAQ,CAACL,GAAD,CAAf;AACD;;AAED,aAAOK,QAAQ,CAACN,QAAD,CAAf;AACD,KAdH;AAeE,IAAA,MAAM,EAAEO,UAfV;AAgBE,IAAA,MAAM,EAAEG,MAhBV;AAiBE,IAAA,WAAW,EAAEC,WAjBf;AAkBE,IAAA,WAAW,EAAE,CAAAH,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEM,IAAlB,KAA0B,EAlBzC;AAmBE,IAAA,KAAK,EAAElB,YAnBT;AAoBE,IAAA,OAAO,EAAEa,mBApBX;AAqBE,IAAA,YAAY,EAAEG,YArBhB;AAAA,OAsBMR;AAtBN;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAhCD;;GAAMX,I;UACsCE,Y,EAEVG,Q,EACXC,e;;;KAJjBN,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { Menu as UikitMenu, ConnectorId } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from 'constants/localisation/languageCodes'\nimport { LanguageContext } from 'hooks/LanguageContext'\nimport useTheme from 'hooks/useTheme'\nimport useGetPriceData from 'hooks/useGetPriceData'\nimport { injected, bsc, walletconnect } from 'connectors'\nimport links from './config'\n\nconst Menu: React.FC = props => {\n  const { account, activate, deactivate } = useWeb3React()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = useGetPriceData()\n\n  return (\n    <UikitMenu\n      links={links}\n      priceLink=\"https://www.coingecko.com/en/coins/goose-finance\"\n      account={account as string}\n      login={(connectorId: ConnectorId) => {\n        if (connectorId === 'walletconnect') {\n          return activate(walletconnect)\n        }\n\n        if (connectorId === 'bsc') {\n          return activate(bsc)\n        }\n\n        return activate(injected)\n      }}\n      logout={deactivate}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage?.code || ''}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}