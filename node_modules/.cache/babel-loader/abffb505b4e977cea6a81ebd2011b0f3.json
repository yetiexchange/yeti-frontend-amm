{"ast":null,"code":"import _slicedToArray from\"H:/XETI/YETI-AMM-DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useMemo}from'react';import{ThemeContext}from'styled-components';import{Button,CardBody,Text}from'@pancakeswap-libs/uikit';import{Link}from'react-router-dom';import CardNav from'components/CardNav';import Question from'components/QuestionHelper';import FullPositionCard from'components/PositionCard';import{useUserHasLiquidityInAllTokens}from'data/V1';import{useTokenBalancesWithLoadingIndicator}from'state/wallet/hooks';import{StyledInternalLink,TYPE}from'components/Shared';import{LightCard}from'components/Card';import{RowBetween}from'components/Row';import{AutoColumn}from'components/Column';import{useActiveWeb3React}from'hooks';import{usePairs}from'data/Reserves';import{toV2LiquidityToken,useTrackedTokenPairs}from'state/user/hooks';import{Dots}from'components/swap/styleds';import TranslatedText from'components/TranslatedText';import{TranslateString}from'utils/translateTextHelpers';import PageHeader from'components/PageHeader';import AppBody from'../AppBody';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Body=TYPE.body;export default function Pool(){var theme=useContext(ThemeContext);var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;// fetch the user's balances of all tracked V2 LP tokens\nvar trackedTokenPairs=useTrackedTokenPairs();var tokenPairsWithLiquidityTokens=useMemo(function(){return trackedTokenPairs.map(function(tokens){return{liquidityToken:toV2LiquidityToken(tokens),tokens:tokens};});},[trackedTokenPairs]);var liquidityTokens=useMemo(function(){return tokenPairsWithLiquidityTokens.map(function(tpwlt){return tpwlt.liquidityToken;});},[tokenPairsWithLiquidityTokens]);var _useTokenBalancesWith=useTokenBalancesWithLoadingIndicator(account!==null&&account!==void 0?account:undefined,liquidityTokens),_useTokenBalancesWith2=_slicedToArray(_useTokenBalancesWith,2),v2PairsBalances=_useTokenBalancesWith2[0],fetchingV2PairBalances=_useTokenBalancesWith2[1];// fetch the reserves for all V2 pools in which the user has a balance\nvar liquidityTokensWithBalances=useMemo(function(){return tokenPairsWithLiquidityTokens.filter(function(_ref){var _v2PairsBalances$liqu;var liquidityToken=_ref.liquidityToken;return(_v2PairsBalances$liqu=v2PairsBalances[liquidityToken.address])===null||_v2PairsBalances$liqu===void 0?void 0:_v2PairsBalances$liqu.greaterThan('0');});},[tokenPairsWithLiquidityTokens,v2PairsBalances]);var v2Pairs=usePairs(liquidityTokensWithBalances.map(function(_ref2){var tokens=_ref2.tokens;return tokens;}));var v2IsLoading=fetchingV2PairBalances||(v2Pairs===null||v2Pairs===void 0?void 0:v2Pairs.length)<liquidityTokensWithBalances.length||(v2Pairs===null||v2Pairs===void 0?void 0:v2Pairs.some(function(V2Pair){return!V2Pair;}));var allV2PairsWithLiquidity=v2Pairs.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),pair=_ref4[1];return pair;}).filter(function(v2Pair){return Boolean(v2Pair);});var hasV1Liquidity=useUserHasLiquidityInAllTokens();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CardNav,{activeIndex:1}),/*#__PURE__*/_jsxs(AppBody,{children:[/*#__PURE__*/_jsx(PageHeader,{title:\"Liquidity\",description:\"Add liquidity to receive LP tokens\",children:/*#__PURE__*/_jsx(Button,{id:\"join-pool-button\",as:Link,to:\"/add/ETH\",children:/*#__PURE__*/_jsx(TranslatedText,{translationId:100,children:\"Add Liquidity\"})})}),/*#__PURE__*/_jsx(AutoColumn,{gap:\"lg\",justify:\"center\",children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"12px\",style:{width:'100%'},children:[/*#__PURE__*/_jsxs(RowBetween,{padding:\"0 8px\",children:[/*#__PURE__*/_jsx(Text,{color:theme.colors.text,children:/*#__PURE__*/_jsx(TranslatedText,{translationId:102,children:\"Your Liquidity\"})}),/*#__PURE__*/_jsx(Question,{text:TranslateString(130,'When you add liquidity, you are given pool tokens that represent your share. If you donâ€™t see a pool you joined in this list, try importing a pool below.')})]}),!account?/*#__PURE__*/_jsx(LightCard,{padding:\"40px\",children:/*#__PURE__*/_jsx(Body,{color:theme.colors.textDisabled,textAlign:\"center\",children:\"Connect to a wallet to view your liquidity.\"})}):v2IsLoading?/*#__PURE__*/_jsx(LightCard,{padding:\"40px\",children:/*#__PURE__*/_jsx(Body,{color:theme.colors.textDisabled,textAlign:\"center\",children:/*#__PURE__*/_jsx(Dots,{children:\"Loading\"})})}):(allV2PairsWithLiquidity===null||allV2PairsWithLiquidity===void 0?void 0:allV2PairsWithLiquidity.length)>0?/*#__PURE__*/_jsx(_Fragment,{children:allV2PairsWithLiquidity.map(function(v2Pair){return/*#__PURE__*/_jsx(FullPositionCard,{pair:v2Pair},v2Pair.liquidityToken.address);})}):/*#__PURE__*/_jsx(LightCard,{padding:\"40px\",children:/*#__PURE__*/_jsx(Body,{color:theme.colors.textDisabled,textAlign:\"center\",children:/*#__PURE__*/_jsx(TranslatedText,{translationId:104,children:\"No liquidity found.\"})})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"14px\",style:{padding:'.5rem 0 .5rem 0'},children:[hasV1Liquidity?'Uniswap V1 liquidity found!':TranslateString(106,\"Don't see a pool you joined?\"),' ',/*#__PURE__*/_jsx(StyledInternalLink,{id:\"import-pool-link\",to:hasV1Liquidity?'/migrate/v1':'/find',children:hasV1Liquidity?'Migrate now.':TranslateString(108,'Import it.')})]}),/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",style:{padding:'.5rem 0 .5rem 0'},children:\"Or, if you staked your LP tokens in a farm, unstake them to see them here.\"})]})]})})})]})]});}","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/pages/Pool/index.tsx"],"names":["React","useContext","useMemo","ThemeContext","Button","CardBody","Text","Link","CardNav","Question","FullPositionCard","useUserHasLiquidityInAllTokens","useTokenBalancesWithLoadingIndicator","StyledInternalLink","TYPE","LightCard","RowBetween","AutoColumn","useActiveWeb3React","usePairs","toV2LiquidityToken","useTrackedTokenPairs","Dots","TranslatedText","TranslateString","PageHeader","AppBody","Body","body","Pool","theme","account","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityToken","liquidityTokens","tpwlt","undefined","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","pair","v2Pair","Boolean","hasV1Liquidity","width","colors","text","textDisabled","padding"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Pair } from '@pancakeswap-libs/sdk'\nimport { Button, CardBody, Text } from '@pancakeswap-libs/uikit'\nimport { Link } from 'react-router-dom'\nimport CardNav from 'components/CardNav'\nimport Question from 'components/QuestionHelper'\nimport FullPositionCard from 'components/PositionCard'\nimport { useUserHasLiquidityInAllTokens } from 'data/V1'\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\nimport { StyledInternalLink, TYPE } from 'components/Shared'\nimport { LightCard } from 'components/Card'\nimport { RowBetween } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\n\nimport { useActiveWeb3React } from 'hooks'\nimport { usePairs } from 'data/Reserves'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\nimport { Dots } from 'components/swap/styleds'\nimport TranslatedText from 'components/TranslatedText'\nimport { TranslateString } from 'utils/translateTextHelpers'\nimport PageHeader from 'components/PageHeader'\nimport AppBody from '../AppBody'\n\nconst { body: Body } = TYPE\n\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken), [\n    tokenPairsWithLiquidityTokens,\n  ])\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  const hasV1Liquidity = useUserHasLiquidityInAllTokens()\n\n  return (\n    <>\n      <CardNav activeIndex={1} />\n      <AppBody>\n        <PageHeader title=\"Liquidity\" description=\"Add liquidity to receive LP tokens\">\n          <Button id=\"join-pool-button\" as={Link} to=\"/add/ETH\">\n            <TranslatedText translationId={100}>Add Liquidity</TranslatedText>\n          </Button>\n        </PageHeader>\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <CardBody>\n            <AutoColumn gap=\"12px\" style={{ width: '100%' }}>\n              <RowBetween padding=\"0 8px\">\n                <Text color={theme.colors.text}>\n                  <TranslatedText translationId={102}>Your Liquidity</TranslatedText>\n                </Text>\n                <Question\n                  text={TranslateString(\n                    130,\n                    'When you add liquidity, you are given pool tokens that represent your share. If you donâ€™t see a pool you joined in this list, try importing a pool below.'\n                  )}\n                />\n              </RowBetween>\n\n              {!account ? (\n                <LightCard padding=\"40px\">\n                  <Body color={theme.colors.textDisabled} textAlign=\"center\">\n                    Connect to a wallet to view your liquidity.\n                  </Body>\n                </LightCard>\n              ) : v2IsLoading ? (\n                <LightCard padding=\"40px\">\n                  <Body color={theme.colors.textDisabled} textAlign=\"center\">\n                    <Dots>Loading</Dots>\n                  </Body>\n                </LightCard>\n              ) : allV2PairsWithLiquidity?.length > 0 ? (\n                <>\n                  {allV2PairsWithLiquidity.map((v2Pair) => (\n                    <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                  ))}\n                </>\n              ) : (\n                <LightCard padding=\"40px\">\n                  <Body color={theme.colors.textDisabled} textAlign=\"center\">\n                    <TranslatedText translationId={104}>No liquidity found.</TranslatedText>\n                  </Body>\n                </LightCard>\n              )}\n\n              <div>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  {hasV1Liquidity\n                    ? 'Uniswap V1 liquidity found!'\n                    : TranslateString(106, \"Don't see a pool you joined?\")}{' '}\n                  <StyledInternalLink id=\"import-pool-link\" to={hasV1Liquidity ? '/migrate/v1' : '/find'}>\n                    {hasV1Liquidity ? 'Migrate now.' : TranslateString(108, 'Import it.')}\n                  </StyledInternalLink>\n                </Text>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\n                  Or, if you staked your LP tokens in a farm, unstake them to see them here.\n                </Text>\n              </div>\n            </AutoColumn>\n          </CardBody>\n        </AutoColumn>\n      </AppBody>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}