{"ast":null,"code":"var _jsxFileName = \"H:\\\\XETI\\\\YETI-AMM-DEV\\\\src\\\\pages\\\\MigrateV1\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { JSBI, Token } from '@pancakeswap-libs/sdk';\nimport React, { useCallback, useContext, useMemo, useState, useEffect } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { AutoColumn } from '../../components/Column';\nimport { AutoRow } from '../../components/Row';\nimport { SearchInput } from '../../components/SearchModal/styleds';\nimport { useAllTokenV1Exchanges } from '../../data/V1';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAllTokens, useToken } from '../../hooks/Tokens';\nimport { useSelectedTokenList } from '../../state/lists/hooks';\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks';\nimport { BackArrow, TYPE } from '../../components/Shared';\nimport { LightCard } from '../../components/Card';\nimport { BodyWrapper } from '../AppBody';\nimport { EmptyState } from './EmptyState';\nimport V1PositionCard from '../../components/PositionCard/V1';\nimport QuestionHelper from '../../components/QuestionHelper';\nimport { Dots } from '../../components/swap/styleds';\nimport { useAddUserToken } from '../../state/user/hooks';\nimport { isTokenOnList } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  mediumHeader: MediumHeader,\n  body: Body\n} = TYPE;\nexport default function MigrateV1() {\n  _s();\n\n  var _Object$keys;\n\n  const theme = useContext(ThemeContext);\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const [tokenSearch, setTokenSearch] = useState('');\n  const handleTokenSearchChange = useCallback(e => setTokenSearch(e.target.value), [setTokenSearch]); // automatically add the search token\n\n  const token = useToken(tokenSearch);\n  const selectedTokenListTokens = useSelectedTokenList();\n  const isOnSelectedList = isTokenOnList(selectedTokenListTokens, token !== null && token !== void 0 ? token : undefined);\n  const allTokens = useAllTokens();\n  const addToken = useAddUserToken();\n  useEffect(() => {\n    if (token && !isOnSelectedList && !allTokens[token.address]) {\n      addToken(token);\n    }\n  }, [token, isOnSelectedList, addToken, allTokens]); // get V1 LP balances\n\n  const V1Exchanges = useAllTokenV1Exchanges();\n  const V1LiquidityTokens = useMemo(() => {\n    return chainId ? Object.keys(V1Exchanges).map(exchangeAddress => new Token(chainId, exchangeAddress, 18, 'UNI-V1', 'Uniswap V1')) : [];\n  }, [chainId, V1Exchanges]);\n  const [V1LiquidityBalances, V1LiquidityBalancesLoading] = useTokenBalancesWithLoadingIndicator(account !== null && account !== void 0 ? account : undefined, V1LiquidityTokens);\n  const allV1PairsWithLiquidity = V1LiquidityTokens.filter(V1LiquidityToken => {\n    const balance = V1LiquidityBalances === null || V1LiquidityBalances === void 0 ? void 0 : V1LiquidityBalances[V1LiquidityToken.address];\n    return balance && JSBI.greaterThan(balance.raw, JSBI.BigInt(0));\n  }).map(V1LiquidityToken => {\n    const balance = V1LiquidityBalances[V1LiquidityToken.address];\n    return balance ? /*#__PURE__*/_jsxDEV(V1PositionCard, {\n      token: V1Exchanges[V1LiquidityToken.address],\n      V1LiquidityBalance: balance\n    }, V1LiquidityToken.address, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this) : null;\n  }); // should never always be false, because a V1 exhchange exists for WETH on all testnets\n\n  const isLoading = ((_Object$keys = Object.keys(V1Exchanges)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) === 0 || V1LiquidityBalancesLoading;\n  return /*#__PURE__*/_jsxDEV(BodyWrapper, {\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        gap: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(BackArrow, {\n          to: \"/pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MediumHeader, {\n          children: \"Migrate V1 Liquidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Body, {\n        style: {\n          marginBottom: 8,\n          fontWeight: 400\n        },\n        children: \"For each pool shown below, click migrate to remove your liquidity from Uniswap V1 and deposit it into Uniswap V2.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), !account ? /*#__PURE__*/_jsxDEV(LightCard, {\n        padding: \"40px\",\n        children: /*#__PURE__*/_jsxDEV(Body, {\n          color: theme.colors.textDisabled,\n          textAlign: \"center\",\n          children: \"Connect to a wallet to view your V1 liquidity.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : isLoading ? /*#__PURE__*/_jsxDEV(LightCard, {\n        padding: \"40px\",\n        children: /*#__PURE__*/_jsxDEV(Body, {\n          color: theme.colors.textDisabled,\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Dots, {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n          children: /*#__PURE__*/_jsxDEV(SearchInput, {\n            value: tokenSearch,\n            onChange: handleTokenSearchChange,\n            placeholder: \"Enter a token address to find liquidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), (allV1PairsWithLiquidity === null || allV1PairsWithLiquidity === void 0 ? void 0 : allV1PairsWithLiquidity.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: allV1PairsWithLiquidity\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(EmptyState, {\n          message: \"No V1 Liquidity found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MigrateV1, \"N+rIYqGysCTBJb1UGJL9AEQv024=\", false, function () {\n  return [useActiveWeb3React, useToken, useSelectedTokenList, useAllTokens, useAddUserToken, useAllTokenV1Exchanges, useTokenBalancesWithLoadingIndicator];\n});\n\n_c = MigrateV1;\n\nvar _c;\n\n$RefreshReg$(_c, \"MigrateV1\");","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/pages/MigrateV1/index.tsx"],"names":["JSBI","Token","React","useCallback","useContext","useMemo","useState","useEffect","ThemeContext","AutoColumn","AutoRow","SearchInput","useAllTokenV1Exchanges","useActiveWeb3React","useAllTokens","useToken","useSelectedTokenList","useTokenBalancesWithLoadingIndicator","BackArrow","TYPE","LightCard","BodyWrapper","EmptyState","V1PositionCard","QuestionHelper","Dots","useAddUserToken","isTokenOnList","mediumHeader","MediumHeader","body","Body","MigrateV1","theme","account","chainId","tokenSearch","setTokenSearch","handleTokenSearchChange","e","target","value","token","selectedTokenListTokens","isOnSelectedList","undefined","allTokens","addToken","address","V1Exchanges","V1LiquidityTokens","Object","keys","map","exchangeAddress","V1LiquidityBalances","V1LiquidityBalancesLoading","allV1PairsWithLiquidity","filter","V1LiquidityToken","balance","greaterThan","raw","BigInt","isLoading","length","alignItems","justifyContent","marginBottom","fontWeight","colors","textDisabled"],"mappings":"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","sourcesContent":["import { JSBI, Token } from '@pancakeswap-libs/sdk'\nimport React, { useCallback, useContext, useMemo, useState, useEffect } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { AutoColumn } from '../../components/Column'\nimport { AutoRow } from '../../components/Row'\nimport { SearchInput } from '../../components/SearchModal/styleds'\nimport { useAllTokenV1Exchanges } from '../../data/V1'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens, useToken } from '../../hooks/Tokens'\nimport { useSelectedTokenList } from '../../state/lists/hooks'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\nimport { BackArrow, TYPE } from '../../components/Shared'\nimport { LightCard } from '../../components/Card'\nimport { BodyWrapper } from '../AppBody'\nimport { EmptyState } from './EmptyState'\nimport V1PositionCard from '../../components/PositionCard/V1'\nimport QuestionHelper from '../../components/QuestionHelper'\nimport { Dots } from '../../components/swap/styleds'\nimport { useAddUserToken } from '../../state/user/hooks'\nimport { isTokenOnList } from '../../utils'\n\nconst { mediumHeader: MediumHeader, body: Body } = TYPE\n\nexport default function MigrateV1() {\n  const theme = useContext(ThemeContext)\n  const { account, chainId } = useActiveWeb3React()\n\n  const [tokenSearch, setTokenSearch] = useState<string>('')\n  const handleTokenSearchChange = useCallback((e) => setTokenSearch(e.target.value), [setTokenSearch])\n\n  // automatically add the search token\n  const token = useToken(tokenSearch)\n  const selectedTokenListTokens = useSelectedTokenList()\n  const isOnSelectedList = isTokenOnList(selectedTokenListTokens, token ?? undefined)\n  const allTokens = useAllTokens()\n  const addToken = useAddUserToken()\n  useEffect(() => {\n    if (token && !isOnSelectedList && !allTokens[token.address]) {\n      addToken(token)\n    }\n  }, [token, isOnSelectedList, addToken, allTokens])\n\n  // get V1 LP balances\n  const V1Exchanges = useAllTokenV1Exchanges()\n  const V1LiquidityTokens: Token[] = useMemo(() => {\n    return chainId\n      ? Object.keys(V1Exchanges).map(\n          (exchangeAddress) => new Token(chainId, exchangeAddress, 18, 'UNI-V1', 'Uniswap V1')\n        )\n      : []\n  }, [chainId, V1Exchanges])\n  const [V1LiquidityBalances, V1LiquidityBalancesLoading] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    V1LiquidityTokens\n  )\n  const allV1PairsWithLiquidity = V1LiquidityTokens.filter((V1LiquidityToken) => {\n    const balance = V1LiquidityBalances?.[V1LiquidityToken.address]\n    return balance && JSBI.greaterThan(balance.raw, JSBI.BigInt(0))\n  }).map((V1LiquidityToken) => {\n    const balance = V1LiquidityBalances[V1LiquidityToken.address]\n    return balance ? (\n      <V1PositionCard\n        key={V1LiquidityToken.address}\n        token={V1Exchanges[V1LiquidityToken.address]}\n        V1LiquidityBalance={balance}\n      />\n    ) : null\n  })\n\n  // should never always be false, because a V1 exhchange exists for WETH on all testnets\n  const isLoading = Object.keys(V1Exchanges)?.length === 0 || V1LiquidityBalancesLoading\n\n  return (\n    <BodyWrapper>\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrow to=\"/pool\" />\n          <MediumHeader>Migrate V1 Liquidity</MediumHeader>\n          <div>\n            <QuestionHelper text=\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\" />\n          </div>\n        </AutoRow>\n\n        <Body style={{ marginBottom: 8, fontWeight: 400 }}>\n          For each pool shown below, click migrate to remove your liquidity from Uniswap V1 and deposit it into Uniswap\n          V2.\n        </Body>\n\n        {!account ? (\n          <LightCard padding=\"40px\">\n            <Body color={theme.colors.textDisabled} textAlign=\"center\">\n              Connect to a wallet to view your V1 liquidity.\n            </Body>\n          </LightCard>\n        ) : isLoading ? (\n          <LightCard padding=\"40px\">\n            <Body color={theme.colors.textDisabled} textAlign=\"center\">\n              <Dots>Loading</Dots>\n            </Body>\n          </LightCard>\n        ) : (\n          <>\n            <AutoRow>\n              <SearchInput\n                value={tokenSearch}\n                onChange={handleTokenSearchChange}\n                placeholder=\"Enter a token address to find liquidity\"\n              />\n            </AutoRow>\n            {allV1PairsWithLiquidity?.length > 0 ? (\n              <>{allV1PairsWithLiquidity}</>\n            ) : (\n              <EmptyState message=\"No V1 Liquidity found.\" />\n            )}\n          </>\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}