{"ast":null,"code":"import _slicedToArray from\"H:/XETI/YETI-AMM-DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useState}from'react';import useLast from'../../hooks/useLast';import{useSelectedListUrl}from'../../state/lists/hooks';import Modal from'../Modal';import{CurrencySearch}from'./CurrencySearch';import{ListSelect}from'./ListSelect';import{jsx as _jsx}from\"react/jsx-runtime\";export default function CurrencySearchModal(_ref){var isOpen=_ref.isOpen,onDismiss=_ref.onDismiss,onCurrencySelect=_ref.onCurrencySelect,selectedCurrency=_ref.selectedCurrency,otherSelectedCurrency=_ref.otherSelectedCurrency;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),listView=_useState2[0],setListView=_useState2[1];var lastOpen=useLast(isOpen);useEffect(function(){if(isOpen&&!lastOpen){setListView(false);}},[isOpen,lastOpen]);var handleCurrencySelect=useCallback(function(currency){onCurrencySelect(currency);onDismiss();},[onDismiss,onCurrencySelect]);var handleClickChangeList=useCallback(function(){setListView(true);},[]);var handleClickBack=useCallback(function(){setListView(false);},[]);var selectedListUrl=useSelectedListUrl();var noListSelected=!selectedListUrl;return/*#__PURE__*/_jsx(Modal,{isOpen:isOpen,onDismiss:onDismiss,maxHeight:90,minHeight:listView?40:noListSelected?0:80,children:listView?/*#__PURE__*/_jsx(ListSelect,{onDismiss:onDismiss,onBack:handleClickBack}):noListSelected?/*#__PURE__*/_jsx(CurrencySearch,{isOpen:isOpen,onDismiss:onDismiss,onCurrencySelect:handleCurrencySelect,onChangeList:handleClickChangeList,selectedCurrency:selectedCurrency,otherSelectedCurrency:otherSelectedCurrency,showCommonBases:false}):/*#__PURE__*/_jsx(CurrencySearch,{isOpen:isOpen,onDismiss:onDismiss,onCurrencySelect:handleCurrencySelect,onChangeList:handleClickChangeList,selectedCurrency:selectedCurrency,otherSelectedCurrency:otherSelectedCurrency,showCommonBases:false})});}","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/components/SearchModal/CurrencySearchModal.tsx"],"names":["React","useCallback","useEffect","useState","useLast","useSelectedListUrl","Modal","CurrencySearch","ListSelect","CurrencySearchModal","isOpen","onDismiss","onCurrencySelect","selectedCurrency","otherSelectedCurrency","listView","setListView","lastOpen","handleCurrencySelect","currency","handleClickChangeList","handleClickBack","selectedListUrl","noListSelected"],"mappings":"2IACA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,SAA7B,CAAwCC,QAAxC,KAAwD,OAAxD,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,OAASC,kBAAT,KAAmC,yBAAnC,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAASC,cAAT,KAA+B,kBAA/B,CACA,OAASC,UAAT,KAA2B,cAA3B,C,2CAYA,cAAe,SAASC,CAAAA,mBAAT,MAMc,IAL3BC,CAAAA,MAK2B,MAL3BA,MAK2B,CAJ3BC,SAI2B,MAJ3BA,SAI2B,CAH3BC,gBAG2B,MAH3BA,gBAG2B,CAF3BC,gBAE2B,MAF3BA,gBAE2B,CAD3BC,qBAC2B,MAD3BA,qBAC2B,eACKX,QAAQ,CAAU,KAAV,CADb,wCACpBY,QADoB,eACVC,WADU,eAE3B,GAAMC,CAAAA,QAAQ,CAAGb,OAAO,CAACM,MAAD,CAAxB,CAEAR,SAAS,CAAC,UAAM,CACd,GAAIQ,MAAM,EAAI,CAACO,QAAf,CAAyB,CACvBD,WAAW,CAAC,KAAD,CAAX,CACD,CACF,CAJQ,CAIN,CAACN,MAAD,CAASO,QAAT,CAJM,CAAT,CAMA,GAAMC,CAAAA,oBAAoB,CAAGjB,WAAW,CACtC,SAACkB,QAAD,CAAwB,CACtBP,gBAAgB,CAACO,QAAD,CAAhB,CACAR,SAAS,GACV,CAJqC,CAKtC,CAACA,SAAD,CAAYC,gBAAZ,CALsC,CAAxC,CAQA,GAAMQ,CAAAA,qBAAqB,CAAGnB,WAAW,CAAC,UAAM,CAC9Ce,WAAW,CAAC,IAAD,CAAX,CACD,CAFwC,CAEtC,EAFsC,CAAzC,CAGA,GAAMK,CAAAA,eAAe,CAAGpB,WAAW,CAAC,UAAM,CACxCe,WAAW,CAAC,KAAD,CAAX,CACD,CAFkC,CAEhC,EAFgC,CAAnC,CAIA,GAAMM,CAAAA,eAAe,CAAGjB,kBAAkB,EAA1C,CACA,GAAMkB,CAAAA,cAAc,CAAG,CAACD,eAAxB,CAEA,mBACE,KAAC,KAAD,EAAO,MAAM,CAAEZ,MAAf,CAAuB,SAAS,CAAEC,SAAlC,CAA6C,SAAS,CAAE,EAAxD,CAA4D,SAAS,CAAEI,QAAQ,CAAG,EAAH,CAAQQ,cAAc,CAAG,CAAH,CAAO,EAA5G,UACGR,QAAQ,cACP,KAAC,UAAD,EAAY,SAAS,CAAEJ,SAAvB,CAAkC,MAAM,CAAEU,eAA1C,EADO,CAELE,cAAc,cAChB,KAAC,cAAD,EACE,MAAM,CAAEb,MADV,CAEE,SAAS,CAAEC,SAFb,CAGE,gBAAgB,CAAEO,oBAHpB,CAIE,YAAY,CAAEE,qBAJhB,CAKE,gBAAgB,CAAEP,gBALpB,CAME,qBAAqB,CAAEC,qBANzB,CAOE,eAAe,CAAE,KAPnB,EADgB,cAWhB,KAAC,cAAD,EACE,MAAM,CAAEJ,MADV,CAEE,SAAS,CAAEC,SAFb,CAGE,gBAAgB,CAAEO,oBAHpB,CAIE,YAAY,CAAEE,qBAJhB,CAKE,gBAAgB,CAAEP,gBALpB,CAME,qBAAqB,CAAEC,qBANzB,CAOE,eAAe,CAAE,KAPnB,EAdJ,EADF,CA2BD","sourcesContent":["import { Currency } from '@pancakeswap-libs/sdk'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport useLast from '../../hooks/useLast'\nimport { useSelectedListUrl } from '../../state/lists/hooks'\nimport Modal from '../Modal'\nimport { CurrencySearch } from './CurrencySearch'\nimport { ListSelect } from './ListSelect'\n\ninterface CurrencySearchModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  // eslint-disable-next-line react/no-unused-prop-types\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [listView, setListView] = useState<boolean>(false)\n  const lastOpen = useLast(isOpen)\n\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setListView(false)\n    }\n  }, [isOpen, lastOpen])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  const handleClickChangeList = useCallback(() => {\n    setListView(true)\n  }, [])\n  const handleClickBack = useCallback(() => {\n    setListView(false)\n  }, [])\n\n  const selectedListUrl = useSelectedListUrl()\n  const noListSelected = !selectedListUrl\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90} minHeight={listView ? 40 : noListSelected ? 0 : 80}>\n      {listView ? (\n        <ListSelect onDismiss={onDismiss} onBack={handleClickBack} />\n      ) : noListSelected ? (\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          onChangeList={handleClickChangeList}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showCommonBases={false}\n        />\n      ) : (\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          onChangeList={handleClickChangeList}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showCommonBases={false}\n        />\n      )}\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}