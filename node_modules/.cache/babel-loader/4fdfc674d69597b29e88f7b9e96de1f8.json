{"ast":null,"code":"import _toConsumableArray from\"H:/XETI/YETI-AMM-DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"H:/XETI/YETI-AMM-DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{ETHER}from'@pancakeswap-libs/sdk';import React,{useCallback,useContext,useEffect,useMemo,useRef,useState}from'react';import{Text,CloseIcon}from'@pancakeswap-libs/uikit';import{useSelector}from'react-redux';import{useTranslation}from'react-i18next';import{ThemeContext}from'styled-components';import AutoSizer from'react-virtualized-auto-sizer';import{useActiveWeb3React}from'../../hooks';import{useAllTokens,useToken}from'../../hooks/Tokens';import{useSelectedListInfo}from'../../state/lists/hooks';import{LinkStyledButton,TYPE}from'../Shared';import{isAddress}from'../../utils';import Card from'../Card';import Column from'../Column';import ListLogo from'../ListLogo';import QuestionHelper from'../QuestionHelper';import Row,{RowBetween}from'../Row';import CommonBases from'./CommonBases';import CurrencyList from'./CurrencyList';import{filterTokens}from'./filtering';import SortButton from'./SortButton';import{useTokenComparator}from'./sorting';import{PaddedColumn,SearchInput,Separator}from'./styleds';import TranslatedText from'../TranslatedText';import{TranslateString}from'../../utils/translateTextHelpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Main=TYPE.main;export function CurrencySearch(_ref){var selectedCurrency=_ref.selectedCurrency,onCurrencySelect=_ref.onCurrencySelect,otherSelectedCurrency=_ref.otherSelectedCurrency,showCommonBases=_ref.showCommonBases,onDismiss=_ref.onDismiss,isOpen=_ref.isOpen,onChangeList=_ref.onChangeList;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var theme=useContext(ThemeContext);var fixedList=useRef();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchQuery=_useState2[0],setSearchQuery=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),invertSearchOrder=_useState4[0],setInvertSearchOrder=_useState4[1];var allTokens=useAllTokens();// if they input an address, use it\nvar isAddressSearch=isAddress(searchQuery);var searchToken=useToken(searchQuery);var showETH=useMemo(function(){var s=searchQuery.toLowerCase().trim();return s===''||s==='e'||s==='et'||s==='eth';},[searchQuery]);var tokenComparator=useTokenComparator(invertSearchOrder);var audioPlay=useSelector(function(state){return state.user.audioPlay;});var filteredTokens=useMemo(function(){if(isAddressSearch)return searchToken?[searchToken]:[];return filterTokens(Object.values(allTokens),searchQuery);},[isAddressSearch,searchToken,allTokens,searchQuery]);var filteredSortedTokens=useMemo(function(){if(searchToken)return[searchToken];var sorted=filteredTokens.sort(tokenComparator);var symbolMatch=searchQuery.toLowerCase().split(/\\s+/).filter(function(s){return s.length>0;});if(symbolMatch.length>1)return sorted;return[].concat(_toConsumableArray(searchToken?[searchToken]:[]),_toConsumableArray(sorted.filter(function(token){var _token$symbol;return((_token$symbol=token.symbol)===null||_token$symbol===void 0?void 0:_token$symbol.toLowerCase())===symbolMatch[0];})),_toConsumableArray(sorted.filter(function(token){var _token$symbol2;return((_token$symbol2=token.symbol)===null||_token$symbol2===void 0?void 0:_token$symbol2.toLowerCase())!==symbolMatch[0];})));},[filteredTokens,searchQuery,searchToken,tokenComparator]);var handleCurrencySelect=useCallback(function(currency){onCurrencySelect(currency);onDismiss();if(audioPlay){var audio=document.getElementById('bgMusic');if(audio){audio.play();}}},[onDismiss,onCurrencySelect,audioPlay]);// clear the input on open\nuseEffect(function(){if(isOpen)setSearchQuery('');},[isOpen]);// manage focus on modal show\nvar inputRef=useRef();var handleInput=useCallback(function(event){var _fixedList$current;var input=event.target.value;var checksummedInput=isAddress(input);setSearchQuery(checksummedInput||input);(_fixedList$current=fixedList.current)===null||_fixedList$current===void 0?void 0:_fixedList$current.scrollTo(0);},[]);var handleEnter=useCallback(function(e){if(e.key==='Enter'){var s=searchQuery.toLowerCase().trim();if(s==='eth'){handleCurrencySelect(ETHER);}else if(filteredSortedTokens.length>0){var _filteredSortedTokens;if(((_filteredSortedTokens=filteredSortedTokens[0].symbol)===null||_filteredSortedTokens===void 0?void 0:_filteredSortedTokens.toLowerCase())===searchQuery.trim().toLowerCase()||filteredSortedTokens.length===1){handleCurrencySelect(filteredSortedTokens[0]);}}}},[filteredSortedTokens,handleCurrencySelect,searchQuery]);var selectedListInfo=useSelectedListInfo();return/*#__PURE__*/_jsxs(Column,{style:{width:'100%',flex:'1 1'},children:[/*#__PURE__*/_jsxs(PaddedColumn,{gap:\"14px\",children:[/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(Text,{children:[/*#__PURE__*/_jsx(TranslatedText,{translationId:82,children:\"Select a token\"}),/*#__PURE__*/_jsx(QuestionHelper,{text:TranslateString(130,'Find a token by searching for its name or symbol or by pasting its address below.')})]}),/*#__PURE__*/_jsx(CloseIcon,{onClick:onDismiss})]}),/*#__PURE__*/_jsx(SearchInput,{type:\"text\",id:\"token-search-input\",placeholder:t('tokenSearchPlaceholder'),value:searchQuery,ref:inputRef,onChange:handleInput,onKeyDown:handleEnter}),showCommonBases&&/*#__PURE__*/_jsx(CommonBases,{chainId:chainId,onSelect:handleCurrencySelect,selectedCurrency:selectedCurrency}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:/*#__PURE__*/_jsx(TranslatedText,{translationId:126,children:\"Token name\"})}),/*#__PURE__*/_jsx(SortButton,{ascending:invertSearchOrder,toggleSortOrder:function toggleSortOrder(){return setInvertSearchOrder(function(iso){return!iso;});}})]})]}),/*#__PURE__*/_jsx(Separator,{}),/*#__PURE__*/_jsx(\"div\",{style:{flex:'1'},children:/*#__PURE__*/_jsx(AutoSizer,{disableWidth:true,children:function children(_ref2){var height=_ref2.height;return/*#__PURE__*/_jsx(CurrencyList,{height:height,showETH:showETH,currencies:filteredSortedTokens,onCurrencySelect:handleCurrencySelect,otherCurrency:otherSelectedCurrency,selectedCurrency:selectedCurrency,fixedListRef:fixedList});}})}),null&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Separator,{}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(RowBetween,{children:[selectedListInfo.current?/*#__PURE__*/_jsxs(Row,{children:[selectedListInfo.current.logoURI?/*#__PURE__*/_jsx(ListLogo,{style:{marginRight:12},logoURI:selectedListInfo.current.logoURI,alt:\"\".concat(selectedListInfo.current.name,\" list logo\")}):null,/*#__PURE__*/_jsx(Main,{id:\"currency-search-selected-list-name\",children:selectedListInfo.current.name})]}):null,/*#__PURE__*/_jsx(LinkStyledButton,{style:{fontWeight:500,color:theme.colors.textSubtle,fontSize:16},onClick:onChangeList,id:\"currency-search-change-list-button\",children:selectedListInfo.current?'Change':'Select a list'})]})})]})]});}export default CurrencySearch;","map":{"version":3,"sources":["H:/XETI/YETI-AMM-DEV/src/components/SearchModal/CurrencySearch.tsx"],"names":["ETHER","React","useCallback","useContext","useEffect","useMemo","useRef","useState","Text","CloseIcon","useSelector","useTranslation","ThemeContext","AutoSizer","useActiveWeb3React","useAllTokens","useToken","useSelectedListInfo","LinkStyledButton","TYPE","isAddress","Card","Column","ListLogo","QuestionHelper","Row","RowBetween","CommonBases","CurrencyList","filterTokens","SortButton","useTokenComparator","PaddedColumn","SearchInput","Separator","TranslatedText","TranslateString","Main","main","CurrencySearch","selectedCurrency","onCurrencySelect","otherSelectedCurrency","showCommonBases","onDismiss","isOpen","onChangeList","t","chainId","theme","fixedList","searchQuery","setSearchQuery","invertSearchOrder","setInvertSearchOrder","allTokens","isAddressSearch","searchToken","showETH","s","toLowerCase","trim","tokenComparator","audioPlay","state","user","filteredTokens","Object","values","filteredSortedTokens","sorted","sort","symbolMatch","split","filter","length","token","symbol","handleCurrencySelect","currency","audio","document","getElementById","play","inputRef","handleInput","event","input","target","value","checksummedInput","current","scrollTo","handleEnter","e","key","selectedListInfo","width","flex","iso","height","logoURI","marginRight","name","fontWeight","color","colors","textSubtle","fontSize"],"mappings":"8RAAA,OAAmBA,KAAnB,KAAuC,uBAAvC,CACA,MAAOC,CAAAA,KAAP,EAA0CC,WAA1C,CAAuDC,UAAvD,CAAmEC,SAAnE,CAA8EC,OAA9E,CAAuFC,MAAvF,CAA+FC,QAA/F,KAA+G,OAA/G,CACA,OAASC,IAAT,CAAeC,SAAf,KAAgC,yBAAhC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,cAAT,KAA+B,eAA/B,CAEA,OAASC,YAAT,KAA6B,mBAA7B,CACA,MAAOC,CAAAA,SAAP,KAAsB,8BAAtB,CACA,OAASC,kBAAT,KAAmC,aAAnC,CAEA,OAASC,YAAT,CAAuBC,QAAvB,KAAuC,oBAAvC,CACA,OAASC,mBAAT,KAAoC,yBAApC,CACA,OAASC,gBAAT,CAA2BC,IAA3B,KAAuC,WAAvC,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,GAAP,EAAcC,UAAd,KAAgC,QAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,YAAT,KAA6B,aAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,kBAAT,KAAmC,WAAnC,CACA,OAASC,YAAT,CAAuBC,WAAvB,CAAoCC,SAApC,KAAqD,WAArD,CACA,MAAOC,CAAAA,cAAP,KAA2B,mBAA3B,CACA,OAASC,eAAT,KAAgC,kCAAhC,C,gJAEcC,CAAAA,I,CAASlB,I,CAAfmB,I,CAYR,MAAO,SAASC,CAAAA,cAAT,MAQiB,IAPtBC,CAAAA,gBAOsB,MAPtBA,gBAOsB,CANtBC,gBAMsB,MANtBA,gBAMsB,CALtBC,qBAKsB,MALtBA,qBAKsB,CAJtBC,eAIsB,MAJtBA,eAIsB,CAHtBC,SAGsB,MAHtBA,SAGsB,CAFtBC,MAEsB,MAFtBA,MAEsB,CADtBC,YACsB,MADtBA,YACsB,qBACRnC,cAAc,EADN,CACdoC,CADc,iBACdA,CADc,yBAEFjC,kBAAkB,EAFhB,CAEdkC,OAFc,qBAEdA,OAFc,CAGtB,GAAMC,CAAAA,KAAK,CAAG9C,UAAU,CAACS,YAAD,CAAxB,CAEA,GAAMsC,CAAAA,SAAS,CAAG5C,MAAM,EAAxB,CALsB,cAMgBC,QAAQ,CAAS,EAAT,CANxB,wCAMf4C,WANe,eAMFC,cANE,8BAO4B7C,QAAQ,CAAU,KAAV,CAPpC,yCAOf8C,iBAPe,eAOIC,oBAPJ,eAQtB,GAAMC,CAAAA,SAAS,CAAGxC,YAAY,EAA9B,CAEA;AACA,GAAMyC,CAAAA,eAAe,CAAGpC,SAAS,CAAC+B,WAAD,CAAjC,CACA,GAAMM,CAAAA,WAAW,CAAGzC,QAAQ,CAACmC,WAAD,CAA5B,CAEA,GAAMO,CAAAA,OAAgB,CAAGrD,OAAO,CAAC,UAAM,CACrC,GAAMsD,CAAAA,CAAC,CAAGR,WAAW,CAACS,WAAZ,GAA0BC,IAA1B,EAAV,CACA,MAAOF,CAAAA,CAAC,GAAK,EAAN,EAAYA,CAAC,GAAK,GAAlB,EAAyBA,CAAC,GAAK,IAA/B,EAAuCA,CAAC,GAAK,KAApD,CACD,CAH+B,CAG7B,CAACR,WAAD,CAH6B,CAAhC,CAKA,GAAMW,CAAAA,eAAe,CAAG/B,kBAAkB,CAACsB,iBAAD,CAA1C,CAEA,GAAMU,CAAAA,SAAS,CAAGrD,WAAW,CAA0C,SAACsD,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,CAAWF,SAAtB,EAA1C,CAA7B,CAEA,GAAMG,CAAAA,cAAuB,CAAG7D,OAAO,CAAC,UAAM,CAC5C,GAAImD,eAAJ,CAAqB,MAAOC,CAAAA,WAAW,CAAG,CAACA,WAAD,CAAH,CAAmB,EAArC,CACrB,MAAO5B,CAAAA,YAAY,CAACsC,MAAM,CAACC,MAAP,CAAcb,SAAd,CAAD,CAA2BJ,WAA3B,CAAnB,CACD,CAHsC,CAGpC,CAACK,eAAD,CAAkBC,WAAlB,CAA+BF,SAA/B,CAA0CJ,WAA1C,CAHoC,CAAvC,CAKA,GAAMkB,CAAAA,oBAA6B,CAAGhE,OAAO,CAAC,UAAM,CAClD,GAAIoD,WAAJ,CAAiB,MAAO,CAACA,WAAD,CAAP,CACjB,GAAMa,CAAAA,MAAM,CAAGJ,cAAc,CAACK,IAAf,CAAoBT,eAApB,CAAf,CACA,GAAMU,CAAAA,WAAW,CAAGrB,WAAW,CAC5BS,WADiB,GAEjBa,KAFiB,CAEX,KAFW,EAGjBC,MAHiB,CAGV,SAACf,CAAD,QAAOA,CAAAA,CAAC,CAACgB,MAAF,CAAW,CAAlB,EAHU,CAApB,CAIA,GAAIH,WAAW,CAACG,MAAZ,CAAqB,CAAzB,CAA4B,MAAOL,CAAAA,MAAP,CAE5B,mCACMb,WAAW,CAAG,CAACA,WAAD,CAAH,CAAmB,EADpC,qBAGKa,MAAM,CAACI,MAAP,CAAc,SAACE,KAAD,0BAAW,gBAAAA,KAAK,CAACC,MAAN,sDAAcjB,WAAd,MAAgCY,WAAW,CAAC,CAAD,CAAtD,EAAd,CAHL,qBAIKF,MAAM,CAACI,MAAP,CAAc,SAACE,KAAD,2BAAW,iBAAAA,KAAK,CAACC,MAAN,wDAAcjB,WAAd,MAAgCY,WAAW,CAAC,CAAD,CAAtD,EAAd,CAJL,GAMD,CAf4C,CAe1C,CAACN,cAAD,CAAiBf,WAAjB,CAA8BM,WAA9B,CAA2CK,eAA3C,CAf0C,CAA7C,CAiBA,GAAMgB,CAAAA,oBAAoB,CAAG5E,WAAW,CACtC,SAAC6E,QAAD,CAAwB,CACtBtC,gBAAgB,CAACsC,QAAD,CAAhB,CACAnC,SAAS,GACT,GAAImB,SAAJ,CAAe,CACb,GAAMiB,CAAAA,KAAK,CAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd,CACA,GAAIF,KAAJ,CAAW,CACTA,KAAK,CAACG,IAAN,GACD,CACF,CACF,CAVqC,CAWtC,CAACvC,SAAD,CAAYH,gBAAZ,CAA8BsB,SAA9B,CAXsC,CAAxC,CAcA;AACA3D,SAAS,CAAC,UAAM,CACd,GAAIyC,MAAJ,CAAYO,cAAc,CAAC,EAAD,CAAd,CACb,CAFQ,CAEN,CAACP,MAAD,CAFM,CAAT,CAIA;AACA,GAAMuC,CAAAA,QAAQ,CAAG9E,MAAM,EAAvB,CACA,GAAM+E,CAAAA,WAAW,CAAGnF,WAAW,CAAC,SAACoF,KAAD,CAAW,wBACzC,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAN,CAAaC,KAA3B,CACA,GAAMC,CAAAA,gBAAgB,CAAGtE,SAAS,CAACmE,KAAD,CAAlC,CACAnC,cAAc,CAACsC,gBAAgB,EAAIH,KAArB,CAAd,CACA,oBAAArC,SAAS,CAACyC,OAAV,gEAAmBC,QAAnB,CAA4B,CAA5B,EACD,CAL8B,CAK5B,EAL4B,CAA/B,CAOA,GAAMC,CAAAA,WAAW,CAAG3F,WAAW,CAC7B,SAAC4F,CAAD,CAAwC,CACtC,GAAIA,CAAC,CAACC,GAAF,GAAU,OAAd,CAAuB,CACrB,GAAMpC,CAAAA,CAAC,CAAGR,WAAW,CAACS,WAAZ,GAA0BC,IAA1B,EAAV,CACA,GAAIF,CAAC,GAAK,KAAV,CAAiB,CACfmB,oBAAoB,CAAC9E,KAAD,CAApB,CACD,CAFD,IAEO,IAAIqE,oBAAoB,CAACM,MAArB,CAA8B,CAAlC,CAAqC,2BAC1C,GACE,wBAAAN,oBAAoB,CAAC,CAAD,CAApB,CAAwBQ,MAAxB,sEAAgCjB,WAAhC,MAAkDT,WAAW,CAACU,IAAZ,GAAmBD,WAAnB,EAAlD,EACAS,oBAAoB,CAACM,MAArB,GAAgC,CAFlC,CAGE,CACAG,oBAAoB,CAACT,oBAAoB,CAAC,CAAD,CAArB,CAApB,CACD,CACF,CACF,CACF,CAf4B,CAgB7B,CAACA,oBAAD,CAAuBS,oBAAvB,CAA6C3B,WAA7C,CAhB6B,CAA/B,CAmBA,GAAM6C,CAAAA,gBAAgB,CAAG/E,mBAAmB,EAA5C,CAEA,mBACE,MAAC,MAAD,EAAQ,KAAK,CAAE,CAAEgF,KAAK,CAAE,MAAT,CAAiBC,IAAI,CAAE,KAAvB,CAAf,wBACE,MAAC,YAAD,EAAc,GAAG,CAAC,MAAlB,wBACE,MAAC,UAAD,yBACE,MAAC,IAAD,yBACE,KAAC,cAAD,EAAgB,aAAa,CAAE,EAA/B,4BADF,cAEE,KAAC,cAAD,EACE,IAAI,CAAE9D,eAAe,CACnB,GADmB,CAEnB,mFAFmB,CADvB,EAFF,GADF,cAUE,KAAC,SAAD,EAAW,OAAO,CAAEQ,SAApB,EAVF,GADF,cAaE,KAAC,WAAD,EACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,oBAFL,CAGE,WAAW,CAAEG,CAAC,CAAC,wBAAD,CAHhB,CAIE,KAAK,CAAEI,WAJT,CAKE,GAAG,CAAEiC,QALP,CAME,QAAQ,CAAEC,WANZ,CAOE,SAAS,CAAEQ,WAPb,EAbF,CAsBGlD,eAAe,eACd,KAAC,WAAD,EAAa,OAAO,CAAEK,OAAtB,CAA+B,QAAQ,CAAE8B,oBAAzC,CAA+D,gBAAgB,CAAEtC,gBAAjF,EAvBJ,cAyBE,MAAC,UAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,uBACE,KAAC,cAAD,EAAgB,aAAa,CAAE,GAA/B,wBADF,EADF,cAIE,KAAC,UAAD,EAAY,SAAS,CAAEa,iBAAvB,CAA0C,eAAe,CAAE,iCAAMC,CAAAA,oBAAoB,CAAC,SAAC6C,GAAD,QAAS,CAACA,GAAV,EAAD,CAA1B,EAA3D,EAJF,GAzBF,GADF,cAkCE,KAAC,SAAD,IAlCF,cAoCE,YAAK,KAAK,CAAE,CAAED,IAAI,CAAE,GAAR,CAAZ,uBACE,KAAC,SAAD,EAAW,YAAY,KAAvB,UACG,4BAAGE,CAAAA,MAAH,OAAGA,MAAH,oBACC,KAAC,YAAD,EACE,MAAM,CAAEA,MADV,CAEE,OAAO,CAAE1C,OAFX,CAGE,UAAU,CAAEW,oBAHd,CAIE,gBAAgB,CAAES,oBAJpB,CAKE,aAAa,CAAEpC,qBALjB,CAME,gBAAgB,CAAEF,gBANpB,CAOE,YAAY,CAAEU,SAPhB,EADD,EADH,EADF,EApCF,CAoDG,mBACC,wCACE,KAAC,SAAD,IADF,cAEE,KAAC,IAAD,wBACE,MAAC,UAAD,YACG8C,gBAAgB,CAACL,OAAjB,cACC,MAAC,GAAD,YACGK,gBAAgB,CAACL,OAAjB,CAAyBU,OAAzB,cACC,KAAC,QAAD,EACE,KAAK,CAAE,CAAEC,WAAW,CAAE,EAAf,CADT,CAEE,OAAO,CAAEN,gBAAgB,CAACL,OAAjB,CAAyBU,OAFpC,CAGE,GAAG,WAAKL,gBAAgB,CAACL,OAAjB,CAAyBY,IAA9B,cAHL,EADD,CAMG,IAPN,cAQE,KAAC,IAAD,EAAM,EAAE,CAAC,oCAAT,UAA+CP,gBAAgB,CAACL,OAAjB,CAAyBY,IAAxE,EARF,GADD,CAWG,IAZN,cAaE,KAAC,gBAAD,EACE,KAAK,CAAE,CAAEC,UAAU,CAAE,GAAd,CAAmBC,KAAK,CAAExD,KAAK,CAACyD,MAAN,CAAaC,UAAvC,CAAmDC,QAAQ,CAAE,EAA7D,CADT,CAEE,OAAO,CAAE9D,YAFX,CAGE,EAAE,CAAC,oCAHL,UAKGkD,gBAAgB,CAACL,OAAjB,CAA2B,QAA3B,CAAsC,eALzC,EAbF,GADF,EAFF,GArDJ,GADF,CAmFD,CAED,cAAepD,CAAAA,cAAf","sourcesContent":["import { Currency, ETHER, Token } from '@pancakeswap-libs/sdk'\nimport React, { KeyboardEvent, RefObject, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { Text, CloseIcon } from '@pancakeswap-libs/uikit'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport { FixedSizeList } from 'react-window'\nimport { ThemeContext } from 'styled-components'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppState } from '../../state'\nimport { useAllTokens, useToken } from '../../hooks/Tokens'\nimport { useSelectedListInfo } from '../../state/lists/hooks'\nimport { LinkStyledButton, TYPE } from '../Shared'\nimport { isAddress } from '../../utils'\nimport Card from '../Card'\nimport Column from '../Column'\nimport ListLogo from '../ListLogo'\nimport QuestionHelper from '../QuestionHelper'\nimport Row, { RowBetween } from '../Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens } from './filtering'\nimport SortButton from './SortButton'\nimport { useTokenComparator } from './sorting'\nimport { PaddedColumn, SearchInput, Separator } from './styleds'\nimport TranslatedText from '../TranslatedText'\nimport { TranslateString } from '../../utils/translateTextHelpers'\n\nconst { main: Main } = TYPE\n\ninterface CurrencySearchProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  onChangeList: () => void\n}\n\nexport function CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  onDismiss,\n  isOpen,\n  onChangeList,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const fixedList = useRef<FixedSizeList>()\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [invertSearchOrder, setInvertSearchOrder] = useState<boolean>(false)\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const isAddressSearch = isAddress(searchQuery)\n  const searchToken = useToken(searchQuery)\n\n  const showETH: boolean = useMemo(() => {\n    const s = searchQuery.toLowerCase().trim()\n    return s === '' || s === 'e' || s === 'et' || s === 'eth'\n  }, [searchQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    if (isAddressSearch) return searchToken ? [searchToken] : []\n    return filterTokens(Object.values(allTokens), searchQuery)\n  }, [isAddressSearch, searchToken, allTokens, searchQuery])\n\n  const filteredSortedTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    const sorted = filteredTokens.sort(tokenComparator)\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n    if (symbolMatch.length > 1) return sorted\n\n    return [\n      ...(searchToken ? [searchToken] : []),\n      // sort any exact symbol matches first\n      ...sorted.filter((token) => token.symbol?.toLowerCase() === symbolMatch[0]),\n      ...sorted.filter((token) => token.symbol?.toLowerCase() !== symbolMatch[0]),\n    ]\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n      if (audioPlay) {\n        const audio = document.getElementById('bgMusic') as HTMLAudioElement\n        if (audio) {\n          audio.play()\n        }\n      }\n    },\n    [onDismiss, onCurrencySelect, audioPlay]\n  )\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('')\n  }, [isOpen])\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = searchQuery.toLowerCase().trim()\n        if (s === 'eth') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === searchQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, searchQuery]\n  )\n\n  const selectedListInfo = useSelectedListInfo()\n\n  return (\n    <Column style={{ width: '100%', flex: '1 1' }}>\n      <PaddedColumn gap=\"14px\">\n        <RowBetween>\n          <Text>\n            <TranslatedText translationId={82}>Select a token</TranslatedText>\n            <QuestionHelper\n              text={TranslateString(\n                130,\n                'Find a token by searching for its name or symbol or by pasting its address below.'\n              )}\n            />\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        <SearchInput\n          type=\"text\"\n          id=\"token-search-input\"\n          placeholder={t('tokenSearchPlaceholder')}\n          value={searchQuery}\n          ref={inputRef as RefObject<HTMLInputElement>}\n          onChange={handleInput}\n          onKeyDown={handleEnter}\n        />\n        {showCommonBases && (\n          <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n        )}\n        <RowBetween>\n          <Text fontSize=\"14px\">\n            <TranslatedText translationId={126}>Token name</TranslatedText>\n          </Text>\n          <SortButton ascending={invertSearchOrder} toggleSortOrder={() => setInvertSearchOrder((iso) => !iso)} />\n        </RowBetween>\n      </PaddedColumn>\n\n      <Separator />\n\n      <div style={{ flex: '1' }}>\n        <AutoSizer disableWidth>\n          {({ height }) => (\n            <CurrencyList\n              height={height}\n              showETH={showETH}\n              currencies={filteredSortedTokens}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n            />\n          )}\n        </AutoSizer>\n      </div>\n\n      {null && (\n        <>\n          <Separator />\n          <Card>\n            <RowBetween>\n              {selectedListInfo.current ? (\n                <Row>\n                  {selectedListInfo.current.logoURI ? (\n                    <ListLogo\n                      style={{ marginRight: 12 }}\n                      logoURI={selectedListInfo.current.logoURI}\n                      alt={`${selectedListInfo.current.name} list logo`}\n                    />\n                  ) : null}\n                  <Main id=\"currency-search-selected-list-name\">{selectedListInfo.current.name}</Main>\n                </Row>\n              ) : null}\n              <LinkStyledButton\n                style={{ fontWeight: 500, color: theme.colors.textSubtle, fontSize: 16 }}\n                onClick={onChangeList}\n                id=\"currency-search-change-list-button\"\n              >\n                {selectedListInfo.current ? 'Change' : 'Select a list'}\n              </LinkStyledButton>\n            </RowBetween>\n          </Card>\n        </>\n      )}\n    </Column>\n  )\n}\n\nexport default CurrencySearch\n"]},"metadata":{},"sourceType":"module"}